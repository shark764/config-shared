"use strict";!function(e){e.module("liveopsConfigPanel.shared.config",[]).value("liveopsConfigPanel.shared.config",{debug:!0}),e.module("liveopsConfigPanel.shared.directives",["liveopsConfigPanel.shared.services","liveopsConfigPanel.shared.filters"]),e.module("liveopsConfigPanel.shared.filters",[]),e.module("liveopsConfigPanel.shared.services",["toastr","ngLodash","ngResource","pascalprecht.translate","liveopsConfigPanel.shared.config"]),e.module("liveopsConfigPanel.shared",["liveopsConfigPanel.shared.config","liveopsConfigPanel.shared.directives","liveopsConfigPanel.shared.filters","liveopsConfigPanel.shared.services"])}(angular),angular.module("liveopsConfigPanel.shared.config").value("apiHostname","http://localhost:9080").constant("BIRST_URL","https://dev-birst.liveopslabs.com").constant("SSO_PASSWORD","JO4IIiv0vuzyhoYoyWpbip0QquoCQyGh").constant("SPACE_ID","2846b565-23f8-4032-b563-21f8b7a01cc5").constant("helpDocsHostname","http://beta-help-docs.liveopslabs.com"),angular.module("liveopsConfigPanel.shared.config").constant("jsedn",window.jsedn).constant("_",window._).constant("preferenceKey","LIVEOPS-PREFERENCE-KEY").constant("sessionKey","LIVEOPS-SESSION-KEY").constant("uuidcacheKey","LIVEOPS-CACHE-KEY").constant("apiErrorKeys",["required"]),angular.module("liveopsConfigPanel.mock",[]).value("mockRegions",[{id:"regionId1",description:"US East (N. Virginia)",name:"us-east-1"}]).value("mockLogin",{userId:"userId1",username:"username",platformPermissions:[],tenants:[]}).run(function(e,n,t,r,o){o.token="token1",o.tenant={tenantId:"tenant-id"},o.user={id:"userId1"},o.activeRegionId=t[0].id,e.when("GET",n+"/v1/regions").respond({result:t}),e.when("POST",n+"/v1/login").respond({result:r})}),function(){var e=function(e,n,t){return{seed:function(r,o){var i,a,s,l,u,c,d,p,f,m="10f15d80-0052-11e5-b68b-fb65b1fe22e1";return e.get("http://localhost:9080/v1/regions").then(function(n){return i=n.data.result[0].id,console.log("-- TITAN_REGION_ID --",i),e.post("http://localhost:9080/v1/login",{email:"titan@liveops.com",password:"gKVnfF9wrs6XPSYs"})}).then(function(n){return a=n.data.result.user.id,console.log("-- TITAN_ADMIN_ID --",a),e.post("http://localhost:9080/v1/users",{createdBy:a,email:r,password:o,firstName:"Test",lastName:"User",status:"enabled",externalId:"00000000-0000-0000-000000000000"})}).then(function(n){return s=n.data.result.id,l=n.data.result.email,console.log("-- CREATED_USER_ID --",s),console.log("-- CREATED_USER_EMAIL --",l),e.post("http://localhost:9080/v1/tenants",{adminUserId:s,createdBy:a,description:"This is a test tenant created by the seed service.",name:"Test Tenant",regionId:i})}).then(function(n){return u=n.data.result.id,console.log("-- CREATED TENANT ID --",u),e.post("http://localhost:9080/v1/tenants/"+u+"/invites",{roleId:m,email:l})}).then(function(i){return c=i.data.result.invitation.invitationToken,console.log("-- CREATED_INVITE_TOKEN --",c),console.log("-- LOG IN AS NEW USER --"),t(function(){n.login(r,o).then(function(){return e.get("http://localhost:9080/v1/tenants/"+u+"/invites/"+s+"/accept?token="+c)}).then(function(n){return f=n.data.result,console.log("-- ACCEPTED_INVITE_STATUS --",f),e.post("http://localhost:9080/v1/tenants/"+u+"/flows",{createdBy:s,description:"Test flow description.",name:"Test flow",tenantId:u,type:"customer"})}).then(function(n){return d=n.data.result.id,console.log("-- CREATED_FLOW_ID --",d),e.post("http://localhost:9080/v1/tenants/"+u+"/flows/"+d+"/versions",{createdBy:s,description:"Initial Version.",name:"v1",flowId:d,tenantId:u,flow:"[]"})}).then(function(e){p=e.data.result.version,console.log("-- CREATED VERSION ID --",p),console.log('\n\n Done seeding DB with all necessary data to access the flows screen. Log in as the user "'+r+'" with the password "'+o+'" and access the flows screen and go to town :)')})},5e3),n.login(r,o)})}}};angular.module("liveopsConfigPanel.shared.services").service("flowSetup",e)}(),Array.prototype.removeItem=function(e){var n=this.indexOf(e);n>-1&&this.splice(n,1)},Array.prototype.clear=function(){this.splice(0,this.length)},Array.prototype.shuffle=function(){var e,n,t=this.length;if(0===t)return this;for(;--t;)e=Math.floor(Math.random()*(t+1)),n=this[t],this[t]=this[e],this[e]=n;return this},String.prototype.insert=function(e,n){return e>0?this.substring(0,e)+n+this.substring(e,this.length):n+this},String.prototype.capitalize=function(){return this.charAt(0).toUpperCase()+this.slice(1)},String.prototype.contains||(String.prototype.contains=function(e){return this.indexOf(e)>-1}),angular.module("liveopsConfigPanel.shared.directives").directive("auditText",["$filter","TenantUser","Session",function(e,n,t){return{restrict:"AE",scope:{translation:"@",userId:"=",date:"="},template:"{{get()}}",link:function(r){r.get=function(){if(!r.userId)return e("translate")(r.translation,{date:e("date")(r.date,"medium")});var o=n.cachedGet({id:r.userId,tenantId:t.tenant.tenantId},"AuditTextUsers");return o.$resolved&&(r.text=e("translate")(r.translation,{displayName:o.getDisplay(),date:e("date")(r.date,"medium")})),r.text}}}}]),angular.module("liveopsConfigPanel.shared.directives").directive("autocomplete",["filterFilter","$timeout",function(e,n){return{restrict:"E",scope:{items:"=",nameField:"@",onSelect:"&",prefill:"=",isRequired:"=",placeholder:"@",hover:"=",keepExpanded:"=",onEnter:"&"},templateUrl:"liveops-config-panel-shared/directives/autocomplete/autocomplete.html",link:function(t){t.currentText=t.prefill||"",t.$watch("currentText",function(){var r;if(t.nameField){var o=t.filterCriteria={};o[t.nameField]=t.currentText,r=e(t.items,o,!0)}n(function(){t.onSelect({currentText:t.currentText})})}),t.select=function(e){t.hovering=!1,t.currentText=e.content},t.onBlur=function(){t.keepExpanded||(t.showSuggestions=!1)}}}}]),angular.module("liveopsConfigPanel.shared.directives").service("BulkAction",["$q",function(e){var n=function(){this.checked=!1};return n.prototype.reset=function(){this.checked=!1},n.prototype.apply=function(){},n.prototype.execute=function(n){var t=[],r=this;return angular.forEach(n,function(n){r.doesQualify(n)&&t.push(e.when(r.apply(n)))}),e.all(t)},n.prototype.canExecute=function(){return!0},n.prototype.doesQualify=function(){return!0},n}]),angular.module("liveopsConfigPanel.shared.directives").controller("bulkActionExecutorController",["$scope","$filter","$q",function(e,n,t){var r=this;e.bulkActions=[],this.register=function(n){e.bulkActions.push(n)},this.deregister=function(n){e.bulkActions.removeItem(n)},this.getCheckedItems=function(e){return n("filter")(e,{checked:!0})},this.getAffected=function(){var n=r.getCheckedItems(e.items),t=r.getCheckedItems(e.bulkActions),o=[];return angular.forEach(n,function(e){angular.forEach(t,function(n){n.doesQualify(e)&&o.push(e)})}),o},this.execute=function(){var n=r.getCheckedItems(e.bulkActions),o=[];return angular.forEach(n,function(n){if(n.canExecute()){var i=r.getCheckedItems(e.items);o.push(t.when(n.execute(i)))}}),t.all(o)},this.canExecute=function o(){var n=r.getCheckedItems(e.bulkActions),o=!!n.length;return(o=o&&!!r.getAffected().length)&&angular.forEach(n,function(e){o=o&&e.canExecute()}),o}}]),angular.module("liveopsConfigPanel.shared.directives").directive("bulkActionExecutor",["$q","Alert","Modal","$translate","DirtyForms","$filter",function(e,n,t,r,o,i){return{restrict:"E",scope:{items:"=",showBulkActions:"=",dropOrderBy:"@",confirmMessageKey:"@"},transclude:!0,templateUrl:"liveops-config-panel-shared/directives/bulkActionExecutor/bulkActionExecutor.html",controller:"bulkActionExecutorController",link:function(e,a,s,l,u){e.confirmExecute=function(){t.showConfirm({title:r.instant("bulkActions.confirm.title"),message:r.instant(e.confirmMessageKey,{numItems:l.getAffected().length}),okCallback:e.execute})},e.closeBulk=function(){o.confirmIfDirty(function(){e.$emit("details:panel:close")})},e.selectedItems=function(){if(e.checkedItems.clear(),angular.forEach(e.items,function(n){n.checked&&e.checkedItems.push(n)}),e.dropOrderBy){var n=i("orderBy")(e.checkedItems,e.dropOrderBy);e.checkedItems.clear(),e.checkedItems.push.apply(e.checkedItems,n)}return e.checkedItems},e.cancel=function(){o.confirmIfDirty(function(){e.bulkActionForm.$dirty?e.resetForm():e.closeBulk()})},e.resetForm=function(){e.bulkActionForm.$setUntouched(),e.bulkActionForm.$setPristine(),angular.forEach(l.bulkActions,function(e){e.reset()})},u(e.$parent,function(e){a.find(".detail-body").append(e)}),e.confirmMessageKey||(e.confirmMessageKey="bulkActions.confirm.message"),e.checkedItems=[],e.$watch("showBulkActions",function(n){n||e.resetForm()}),e.execute=function(){return e.bulkActionForm.$setUntouched(),e.bulkActionForm.$setPristine(),l.execute().then(function(){n.success(r.instant("bulkAction.success")),e.resetForm()})},e.canExecute=l.canExecute}}}]),angular.module("liveopsConfigPanel.shared.directives.bulkAction.mock",["liveopsConfigPanel.mock"]).service("mockBulkActions",["$q","BulkAction",function(e,n){var t=[new n];return t[0].checked=!0,spyOn(t[0],"execute").and.returnValue(e.when()),spyOn(t[0],"canExecute").and.returnValue(!0),t.push(new n),t[1].checked=!0,spyOn(t[1],"execute").and.returnValue(e.when()),spyOn(t[1],"canExecute").and.returnValue(!1),t}]),angular.module("liveopsConfigPanel.shared.directives").directive("compiledInclude",["$compile","$templateCache","$http","$q",function(e,n,t,r){return{restrict:"A",priority:400,compile:function(){return function(o,i,a){var s=a.compiledInclude,l=n.get(s);l||(l=t.get(s,{cache:n}).then(function(e){return n.put(s,e.data),e.data})),r.when(l).then(function(n){i.html(n),e(i.contents())(o)})}}}}]),angular.module("liveopsConfigPanel.shared.directives").directive("loCancel",["$q",function(e){return{restrict:"A",require:["^loFormCancel"],link:function(n,t,r,o){r.event=angular.isDefined(r.event)?r.event:"click",t.bind(r.event,function(){var t=e.when(n.$eval(r.loCancel));t.then(function(){return o[0].cancel()}),n.$apply()})}}}]),angular.module("liveopsConfigPanel.shared.directives").directive("loFormAlert",["$parse","Alert",function(e,n){return{restrict:"A",require:["loFormSubmit"],controller:function(){this.alertSuccess=function(e){var t=e.updated?"updated":"saved";n.success("Record "+t)},this.alertFailure=function(e){var t=e.updated?"update":"save";n.error("Record failed to "+t)}},link:function(e,n){e.$on("form:submit:success",function(e,t){var r=n.data("$loFormAlertController");r.alertSuccess(t)}),e.$on("form:submit:failure",function(e,t){var r=n.data("$loFormAlertController");r.alertFailure(t)})}}}]),angular.module("liveopsConfigPanel.shared.directives").directive("loFormCancel",["$parse","DirtyForms","$timeout","$rootScope",function(e,n,t,r){return{restrict:"A",require:["ngResource","form","^loDetailsPanel"],controller:function(o){var i=this;this.resetForm=function(){angular.forEach(i.formController,function(e,n){if(e&&e.hasOwnProperty("$modelValue")&&e.$invalid){var t=e.$modelValue;null===t&&(t=void 0),i.formController[n].$setViewValue(t),i.formController[n].$rollbackViewValue()}}),i.formController.$setPristine(),i.formController.$setUntouched()},this.cancel=function(){var a=e(this.ngResource)(o);a.isNew()||!this.formController.$dirty?this.loDetailsPanelController.close():n.confirmIfDirty(function(){r.$broadcast("cancel:resource:"+a.resourceName),a.reset(),t(function(){i.resetForm(i.formController)})})}},link:function(n,t,r,o){n.$watch(r.ngResource,function(o,i){i&&i.reset();var a=e(r.name)(n),s=t.data("$loFormCancelController");s.resetForm(a)});var i=t.data("$loFormCancelController");i.ngResource=r.ngResource,i.formController=o[1],i.loDetailsPanelController=o[2]}}}]),angular.module("liveopsConfigPanel.shared.directives").controller("loFormResetController",["$scope","$timeout","modelResetService","DirtyForms",function(e,n,t,r){var o=this;o.resetForm=function(){angular.forEach(o.formController,function(e,n){if(e&&e.hasOwnProperty("$modelValue")&&e.$invalid){var t=e.$modelValue;null===t&&(t=void 0),o.formController[n].$setViewValue(t),o.formController[n].$rollbackViewValue()}}),o.formController.$setPristine(),o.formController.$setUntouched()},o.reset=function(e){t.reset(e),o.resetForm(o.formController)},o.onEvent=function(e){r.confirmIfDirty(function(){return n(function(){return o.reset(e)})})}}]),angular.module("liveopsConfigPanel.shared.directives").directive("loFormReset",[function(){return{restrict:"A",require:"form",controller:"loFormResetController",link:function(e,n,t,r){var o=n.data("$loFormResetController");o.formController=r,r.resetController=o}}}]),angular.module("liveopsConfigPanel.shared.directives").directive("loFormResetWatch",[function(){return{restrict:"A",require:["loFormResetController","ngModel"],controller:"loFormResetController",link:function(e,n,t,r){var o=r[0];e.$watch(t.ngModel,function(e,n){n&&o.reset(n)})}}}]),angular.module("liveopsConfigPanel.shared.directives").directive("loFormSubmit",["$parse","apiErrorKeys",function(e,n){return{restrict:"A",require:"form",controller:function(t){var r=this;r.errorInputWatchesUnbinds={},this.populateApiErrors=function(o){return e("data.error")(o)&&angular.forEach(o.data.error.attribute,function(e,o){angular.isDefined(r.formController[o])&&(n.indexOf(e)>=0?(r.formController[o].$setValidity(e,!1),r.formController[o].$error={},r.formController[o].$error[e]=!0):(r.formController[o].$setValidity("api",!1),r.formController[o].$error={api:e}),r.formController[o].$setTouched(),r.formController[o].$setPristine(),r.errorInputWatchesUnbinds[o]=t.$watch(function(){return r.formController[o].$dirty},function(e){e&&(r.formController[o].$setValidity("api",!0),r.errorInputWatchesUnbinds[o](),delete r.errorInputWatchesUnbinds[o])}))}),o}},link:function(e,n,t,r){var o=n.data("$loFormSubmitController");o.formController=r}}}]),angular.module("liveopsConfigPanel.shared.directives").directive("loReset",["$q","$parse",function(e,n){return{restrict:"A",require:["^form","ngModel"],controller:"loFormResetController",link:function(t,r,o,i){var a=r.data("$loResetController");a.formController=i[0],a.ngModel=i[1],o.name&&n(o.name).assign(t,a),o.event=angular.isDefined(o.event)?o.event:"click",r.bind(o.event,function(){var n=e.when(t.$eval(o.loReset));n.then(function(e){e=e?e:a.ngModel.$modelValue,a.onEvent(e)}),t.$apply()})}}}]),angular.module("liveopsConfigPanel.shared.directives").directive("loSubmit",["$q","$parse",function(e,n){return{restrict:"A",require:["^loFormSubmit","?^loFormCancel","?^loFormReset","?^loFormAlert"],link:function(t,r,o,i){o.event=angular.isDefined(o.event)?o.event:"click";var a=i[0],s=i[1],l=i[2],u=i[3];r.bind(o.event,function(){var r=n(o.ngDisabled)(t);if(!r){var i=e.when(t.$eval(o.loSubmit));i=i.then(function(e){return s?s.resetForm():l&&l.resetForm(),e},function(n){var t=e.defer();return a&&a.populateApiErrors(n),t.reject(n),t.promise}),u&&(i=i.then(function(e){u.alertSuccess(e)},function(e){u.alertFailure(e.config.data)})),t.$apply()}})}}}]),angular.module("liveopsConfigPanel.shared.directives").directive("disableContents",[function(){return{compile:function(e,n){var t="input, button, select, textarea, label",r=e.find(t);angular.forEach(r,function(e){e=angular.element(e);var t=e.attr("ng-disabled");t=t?t+" || ":"",t+=n.disableContents,e.attr("ng-disabled",t)})}}}]),angular.module("liveopsConfigPanel.shared.directives").run(["$templateCache",function(e){e.put("liveops-config-panel-shared/filters/new.html",""),e.put("liveops-config-panel-shared/directives/autocomplete/autocomplete.html",'<div class="autocomplete-container">\n  <input\n    autocomplete="off"\n    name="{{nameField}}"\n    ng-required="isRequired"\n    type="text"\n    ng-model="currentText"\n    ng-focus="showSuggestions=true"\n    ng-blur="onBlur()"\n    placeholder="{{placeholder}}"\n    ng-keypress="($event.which === 13) ? onEnter() : 0"></input>\n    <i class="fa fa-search"></i>\n    <ul ng-class="{\'embeded\' : !hover}" ng-show="filtered.length > 0 && (showSuggestions || hovering)" ng-mouseover="hovering=true" ng-mouseout="hovering=false">\n      <li class="lo-hover-highlight" ng-class="{\'highlight\' : selectedItem == item, \'lo-highlight\' : selectedItem == item}" ng-click="select(item)" ng-repeat="item in filtered = (items | filter:filterCriteria | orderBy:nameField)">{{item[nameField] || item.getDisplay()}}</li>\n    </ul>\n</div>\n'),e.put("liveops-config-panel-shared/directives/bulkActionExecutor/bulkActionExecutor.html",'<form id="bulk-action-form" name="bulkActionForm" class="details-pane" unsaved-changes-warning>\n  <i id="close-bulk-button" class="fa fa-remove remove" ng-click="closeBulk()"></i>\n  <div id="bulk-actions-selected-header" class="detail-header">\n    <filter-dropdown\n      label="{{\'bulkActions.selected\' | translate}}({{selectedItems().length}})"\n      options="selectedItems()"\n      display-path="getDisplay"\n      value-path="id">\n    </filter-dropdown>\n  </div>\n\n  <div class="detail-body">\n    <!-- bulkAction elements injected here -->\n  </div>\n\n  <div class="detail-controls">\n    <input id="cancel-bulk-actions-btn"\n      type="button"\n      class="btn"\n      ng-click="cancel()"\n      value="{{\'value.cancel\' | translate}}">\n    </input>\n    <input id="submit-bulk-actions-btn"\n      ng-disabled="!canExecute()"\n      type="button"\n      class="btn btn-primary"\n      ng-click="confirmExecute()"\n      value="{{\'value.submit\' | translate}}">\n  </div>\n</form>\n'),e.put("liveops-config-panel-shared/directives/dropdown/dropdown.html",'<div class="dropdown-wrapper">\n  <div class="drop-label" ng-class="{\'drop-origin\' : showDrop}" ng-click="dropClick()" ng-mouseenter="mouseIn()">\n    <div>\n      <span>{{label}}</span>\n      <i id="nav-dropdown-down-arrow" ng-show="showDrop" class="{{collapseIcon}} label-icon"></i>\n      <i ng-show="! showDrop" class="{{expandIcon}} label-icon"></i>\n    </div>\n  </div>\n\n  <div class="dropdown-container">\n    <div class="dropdown" ng-hide="! showDrop">\n      <ul>\n        <li id="{{item.id}}"\n          ng-repeat="item in items | orderBy:orderBy"\n          ng-click="optionClick(item.onClick)">\n            <span class="lo-hover-highlight lo-accent-hover-border" ng-if="! item.stateLink"><i class="{{item.iconClass}}"></i>{{item[displayPath]}}</span>\n            <a class="lo-hover-highlight lo-accent-hover-border" ng-if="item.stateLink" ui-sref="{{item.stateLink}}({{item.stateLinkParams}})"><i class="{{item.iconClass}}"></i>{{item[displayPath]}}</a>\n        </li>\n      </ul>\n    </div>\n  </div>\n</div>\n'),e.put("liveops-config-panel-shared/directives/dropdown/filterDropdown.html",'<div class="dropdown-label" ng-click="showDrop = ! showDrop">\n  <span>{{label}}</span>\n  <div ng-if="showAll" class="all-label">\n    <span ng-if="all.checked"><span ng-if="label">:</span> All</span>\n    <span ng-if="!all.checked"><span ng-if="label">:</span> (...)</span>\n  </div>\n  <span><i class="fa" ng-class="{\'fa-caret-up\' : showDrop, \'fa-caret-down\' : ! showDrop}"></i></span>\n</div>\n\n<div class="dropdown-container">\n  <div class="dropdown filter-dropdown" ng-hide="! showDrop || options.length === 0">\n    <div class="all lo-accent-hover-box-border lo-hover-highlight" ng-if="showAll" ng-click="toggleAll()">\n      <input type="checkbox" ng-checked="all.checked"/>\n      <label>All</label>\n    </div>\n    <div ng-repeat="option in options | orderBy:orderBy"\n      class="dropdown-option lo-accent-hover-box-border lo-hover-highlight" ng-click="checkItem(option)" >\n      <input name="{{option | parse:valuePath | invoke:option}}" type="checkbox" ng-checked="option.checked"/>\n      <label for="{{option | parse:valuePath | invoke:option}}">\n        {{option | parse:displayPath | invoke:option}}\n      </label>\n    </div>\n  </div>\n</div>\n'),e.put("liveops-config-panel-shared/directives/formError/formError.html",'<div class="lo-error" role="alert" ng-if=\'field.$touched && field.$invalid\' ng-messages="field.$error">\n  <div ng-repeat="(error, value) in field.$error" >\n    <span ng-message="{{error}}" ng-if="isString(value)">{{value}}</span>\n    <span ng-message="{{error}}" ng-if="value === true">{{errorTypes[error]}}</span>\n  </div>\n</div>\n'),e.put("liveops-config-panel-shared/directives/formFieldValidationMessage/formFieldValidationMessage.html",'<div class="lo-error" role="alert"\n  ng-if=\'form[fieldName].$touched && form[fieldName].$invalid\'\n  ng-messages="form[fieldName].$error">\n  <div ng-repeat="(error, value) in form[fieldName].$error" >\n    <span ng-message="{{error}}" ng-if="isString(value)">{{value}}</span>\n    <span ng-message="{{error}}" ng-if="value === true">{{errorTypes[error]}}</span>\n  </div>\n</div>\n'),e.put("liveops-config-panel-shared/directives/helpIcon/helpIcon.html",'<span class="fa-stack help-icon lo-accent-hover" ng-mouseenter="showTooltip()" ng-mouseleave="destroyTooltip()">\n  <i class="fa fa-circle-thin fa-stack-2x"></i>\n  <i class="fa fa-info fa-stack-1x"></i>\n</span>'),e.put("liveops-config-panel-shared/directives/loMultibox/loMultibox.html",'<div ng-class="{\'edit\': showDrop === true}">\n  <div class="label-container" ng-click="labelClick()" ng-hide="showDrop && !display">\n    <input type="text" name="{{name + \'-display\'}}"\n      placeholder="{{\'multibox.add.placeholder\' | translate}}"\n      readonly="true" border="0"  class="label"\n      ng-required="true"\n      ng-model="display" />\n    <i class="fa" ng-class="{\'fa-caret-down\': !showDrop, \'fa-caret-up\':showDrop}"></i>\n  </div>\n\n  <div class="edit-box" ng-show="showDrop">\n    <type-ahead\n      items="items"\n      placeholder="{{\'multibox.search.placeholder\' | translate}}"\n      on-select="onSelect(selectedItem)"\n      keep-expanded="true"\n      selected-item="selectedItem"></type-ahead>\n    <input id="show-create-new-item-btn" class="btn" type="button"\n      ng-click="createItem()" \n      value="{{\'multibox.create.btn\' | translate}}" />\n  </div>\n</div>\n'),e.put("liveops-config-panel-shared/directives/loading/loading.html",'<div class="loading"><i class="fa fa-refresh fa-spin"></i> {{\'loading\' | translate}}</div>\n'),e.put("liveops-config-panel-shared/directives/modal/modal.html",'<div id="modal" ng-include="modalBody">\n\n</div>'),e.put("liveops-config-panel-shared/directives/numberSlider/numberSlider.html",'<div class="number-slider inner-addon right">\n  <input type="text" ng-model="value" placeholder="{{placeholder}}"></input>\n  <i ng-mousedown="increment()" class="fa fa-caret-up top" ng-class="{disabled : value + 1 > maxValue}"></i>\n  <i ng-mousedown="decrement()" class="fa fa-caret-down bottom" ng-class="{disabled : value - 1 < minValue}"></i>\n</div>\n'),e.put("liveops-config-panel-shared/directives/resizeHandle/resizeHandle.html",'<div class="resizable-handle lo-accent-text"><i class="fa fa-ellipsis-v"></i></div>'),e.put("liveops-config-panel-shared/directives/singleElementResizeHandle/singleElementResizeHandle.html",'<div class="resizable-handle"><i class="fa fa-ellipsis-v"></i></div>'),e.put("liveops-config-panel-shared/directives/toggle/toggle.html",'<label ng-show="trueValue && falseValue" class="switch switch-green" ng-switch on="confirmOnToggle">\n  <input name="{{name}}" ng-switch-when="true" confirm-toggle type="checkbox" class="switch-input" ng-model="$parent.ngModel" ng-true-value="\'{{trueValue}}\'" ng-false-value="\'{{falseValue}}\'" ng-disabled="ngDisabled">\n  <input name="{{name}}" ng-switch-default type="checkbox" class="switch-input" ng-model="$parent.ngModel" ng-true-value="\'{{trueValue}}\'" ng-false-value="\'{{falseValue}}\'" ng-disabled="ngDisabled">\n  <span class="switch-label" data-on="On" data-off="Off"></span>\n  <span class="switch-handle"></span>\n</label>\n\n<label class="switch switch-green" ng-show="!trueValue || !falseValue" ng-switch on="confirmOnToggle">\n  <input name="{{name}}" ng-switch-when="true" confirm-toggle type="checkbox" class="switch-input" ng-model="$parent.ngModel" ng-disabled="ngDisabled">\n  <input name="{{name}}" ng-switch-default type="checkbox" class="switch-input" ng-model="$parent.ngModel" ng-disabled="ngDisabled">\n  <span class="switch-label" data-on="On" data-off="Off"></span>\n  <span class="switch-handle"></span>\n</label>'),e.put("liveops-config-panel-shared/directives/tooltip/tooltip.html",'<div class="help-tooltip"><div class="tooltip-content lo-accent-bg" translate="{{translateValue}}">{{text}}</div><div class="tooltip-arrow"></div></div>'),e.put("liveops-config-panel-shared/directives/typeAhead/typeAhead.html",'<div class="typeahead-container">\n  <input\n    autocomplete="off"\n    placeholder="{{placeholder}}"\n    name="{{nameField}}"\n    id="typeahead-container"\n    type="text"\n    ng-model="currentText"\n    ng-focus="showSuggestions=true"\n    ng-blur="onBlur()"></input>\n    <i class="fa fa-search"></i>\n    <ul ng-show="filtered.length > 0 && (showSuggestions || hovering)" \n      ng-mouseover="hovering=true" \n      ng-mouseout="hovering=false">\n       <li ng-repeat="item in filtered = (items | filter:filterCriteria | orderBy:orderByFunction)"\n         ng-class="{\'highlight\' : highlightedItem == item, \'lo-highlight\' : highlightedItem == item}"\n         class="lo-hover-highlight"\n         ng-click="select(item)" >\n           {{item.getDisplay() || item[nameField]}}\n       </li>\n    </ul>\n</div>\n'),e.put("liveops-config-panel-shared/services/modal/confirmModal.html",'\n<div class="confirm">\n  <h3 class="header">{{title}}</h3>\n  <p>{{message}}</p>\n  \n  <div class="footer">\n    <a id="modal-cancel" class="btn" ng-click="cancelCallback()">{{\'value.cancel\' | translate}}</a>\n    <a ng-click="okCallback()" class="btn btn-primary" id="modal-ok">{{\'value.ok\' | translate}}</a>\n  </div>\n</div>'),e.put("liveops-config-panel-shared/directives/editField/dropDown/editField_DropDown.html",'<div class="edit-field edit-field-drop-down" ng-init="edit = false">\n  <ng-transclude></ng-transclude>\n  <div class="input-toggle">\n\n    <select ng-model="ngModel" ng-options="option for option in [\'Admin\', \'Agent\']" name={{name}} required="" ng-show="edit" ng-change="saveHandler()">\n      <option value="">{{defaultText}}</option>\n    </select>\n\n    <div ng-mouseover="hover=true" ng-mouseout="hover=false" ng-click="edit = true" title="Click to edit." ng-show="!edit">\n      <label ng-show="ngModel">{{ngModel}}</label>\n      <label class="placeholder" ng-show="!ngModel">Click to add value</label>\n      <i class="fa fa-pencil" ng-show="hover"></i>\n    </div>\n  </div>\n</div>'),e.put("liveops-config-panel-shared/directives/editField/input/editField_input.html",'<div class="edit-field edit-field-input" ng-init="edit = false">\n  <label>{{label}}</label>\n  <div class="input-toggle">\n    <input ng-model="ngModel" name="{{name}}" type="{{type ? type : \'text\'}}" required="" ng-show="edit" ng-keyup="$event.keyCode == 13 ? saveHandler($event) : null">\n    \n    <div ng-mouseover="hover=true" ng-mouseout="hover=false" ng-click="edit = true" title="Click to edit." ng-show="!edit">\n      <label ng-show="ngModel">{{ngModel}}</label>\n      <label class="placeholder" ng-show="!ngModel">{{placeholder ? placeholder : \'Click to add value\'}}</label>\n      <i class="fa fa-pencil" ng-show="hover"></i>\n    </div>\n  </div>\n</div>\n'),e.put("liveops-config-panel-shared/directives/queryEditor/conditionGroup/conditionGroupEditor.html",'<div ng-class="{\'input-group\': !cqe.readonly}">\n  <label ng-show="!cqe.readonly || cqe.conditionGroup.conditions.length > 0" ng-class="{\'has-elements\': cqe.conditionGroup.conditions.length > 0}">\n    {{ cqe.sectionLabel }}\n  </label>\n\n  <div class="instant-add" ng-show="!cqe.readonly">\n    <div>\n      <type-ahead hover="true" placeholder="{{ cqe.placeholderText }}"\n        items="cqe.items" selected-item="cqe.selectedItem" filters="cqe.conditionsFilter">\n      </type-ahead>\n\n      <proficiency-selector ng-show="cqe.selectedItem.hasProficiency" operator="cqe.conditionOperator" proficiency="cqe.conditionProficiency"></proficiency-selector>\n    </div>\n\n    <button class="add btn" type="button"\n      ng-disabled="!cqe.selectedItem.id" ng-click="cqe.addSelectedCondition()">\n      <i class="fa fa-plus"></i>\n    </button>\n  </div>\n\n  <div class="tag-wrapper clear">\n    <div class="tag" ng-repeat="condition in cqe.conditionGroup.conditions">\n      {{cqe.getConditionName(condition) + \' \' + cqe.prettyConditionFilter(condition)}}\n      <a ng-show="!cqe.readonly" ng-click="cqe.conditionGroup.removeCondition(condition)"><i class="fa fa-times"></i></a>\n    </div> \n  </div>\n</div>\n'),e.put("liveops-config-panel-shared/directives/queryEditor/escalation/escalationEditor.html",'<ng-form name="ec.forms.timeAfterForm">\n  <div class="input-group time-input" ng-if="ec.minSecondsRequired > 0">\n    <label>{{\'queues.query.builder.after.seconds\' | translate}}</label>\n    <input id="escalation-time-input" ng-required="true" name="amount" type="number" ng-model="ec.timeAmount" ng-change="ec.updateTimeInSeconds()" />\n    <select id="escalation-units-dropdown" ng-model="ec.afterSecondsMultiplier" ng-options="option.value as option.label for option in ec.afterTimeOptions" ng-change="ec.updateMultiplier()">\n    </select>\n    <form-error field="ec.forms.timeAfterForm.amount"\n      error-type-required="Time in queue is required"\n      error-type-min-time="Time in queue must be greater then the previous value">\n    </form-error>\n  </div>\n</ng-form>\n\n<escalation-query-editor escalation-query="ec.escalation.query"></escalation-query-editor>\n'),e.put("liveops-config-panel-shared/directives/queryEditor/escalationList/escalationListEditor.html",'<div class="divider-header first-header">\n  <h4>{{\'value.details.query\' | translate}}</h4>\n  <a class="pull-right">\n    <span id="show-advanced-query" ng-show="!qlc.isAdvancedMode" ng-click="qlc.advancedMode()">\n      {{\'queue.details.version.query.advanced.link\' | translate}}\n    </span>\n    <span class="pull-right"  id="show-basic-query" ng-show="qlc.isAdvancedMode && qlc.initialAdvancedQuery" ng-click="qlc.basicMode()">\n      {{\'queue.details.version.query.basic.link\' | translate}}\n    </span>\n  </a>\n</div>\n\n\n<div class="input-group" ng-if="qlc.isAdvancedMode">\n  <label class="textarea-label">{{\'value.details.query\' | translate}}</label>\n  <textarea id="advanced-query-field"\n    ng-required="true" type="text" ng-model="qlc.advancedQuery" name="query"\n    ng-change="qlc.advancedQueryChanged()"></textarea>\n   <form-error field="form[\'query\']"\n     error-type-required="{{\'queue.details.queue.error\' | translate}}"\n     error-type-zermelo="{{\'queue.query.build.zermelo.invalid\' | translate}}"\n     error-type-api>\n   </form-error>\n</div>\n\n\n\n<div ng-if="!qlc.isAdvancedMode" class="query-component" ng-repeat="escalation in qlc.escalationList.escalations">\n  <div ng-class="{\'detail-group\': $index !== 0 }">\n    <div class="divider-header" ng-if="$index !== 0">\n      <h4 id="escalation-level-header">{{ \'queue.query.escalation.level\' | translate:{level: $index} }}</h4>\n      <a id="remove-escalation-level" class="pull-right" ng-click="qlc.removeEscalation(escalation)">{{ \'queue.query.escalation.level.remove\'| translate}}</a>\n    </div>\n\n    <escalation-editor\n      escalation="escalation"\n      min-seconds="qlc.minSecondsForQuery($index)"\n      previous-escalation="::qlc.escalationList.escalations[$index-1]">\n    </escalation-editor>\n\n    <div >\n      <div class="divider-header" ng-if="$index === 0">\n        <h4>{{ \'queue.query.escalation\' | translate}}</h4>\n      </div>\n\n      <div ng-if="!qlc.escalationList.escalations[$index + 1]" class="add-query detail-group">\n        <h4 id="add-escalation-label">{{ \'queue.query.add.escalation.level\' | translate:{level: ($index+1)} }}</h4>\n        <div class="add-group-button">\n          <button class="add btn" type="button" ng-click="qlc.addEscalation()">\n            <i id="add-escalation-btn" class="fa fa-plus"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n'),e.put("liveops-config-panel-shared/directives/queryEditor/escalationQuery/escalationQueryEditor.html",'\n<div class="input-group" id="add-query-filter">\n  <label>{{\'queues.query.builder.filters.label\' | translate}}</label>\n  <div class="instant-add add-filter" disable-contents="eqc.possibleGroups.length == 0">\n    <select id="select-filter-dropdown"\n      ng-model="eqc.currentGroup">\n      <option value="" disabled>{{\'queues.query.builder.filters.placeholder\' | translate}}</option>\n      <option ng-repeat="key in eqc.possibleGroups" value="{{key}}">{{\'queues.query.builder.\' + key | translate }}</option>\n    </select>\n    <div class="add-group-button">\n      <button class="add btn" type="button"\n        ng-disabled="!eqc.currentGroup"\n        ng-click="eqc.addGroup(eqc.currentGroup)">\n\n        <i id="add-filter-btn" class="fa fa-plus"></i>\n      </button>\n    </div>\n  </div>\n</div>\n\n\n<div ng-repeat="item in eqc.escalationQuery.groups" class="details-group">\n\n  <div class="query-component">\n    <div class="divider-header">\n      <h4>{{ \'queues.query.builder.\' + item.key + \'.title\' | translate }}</h4>\n      <a id="{{item.key}}-remove" class="pull-right" ng-click="eqc.verifyRemoveGroup(item.key)">\n        {{\'queue.query.filter.remove\' | translate}}\n      </a>\n    </div>\n    <object-group-editor\n      object-group="item.objectGroup"\n      key="item.key">\n    </object-group-editor>\n  </div>\n\n</div>\n'),e.put("liveops-config-panel-shared/directives/queryEditor/objectGroup/objectGroupEditor.html",'<condition-group-editor\n  id="{{oge.key}}-all"\n  class="details-group"\n  condition-group="oge.objectGroup.andConditions"\n  items="oge.items"\n  section-label="{{\'queue.query.builder.\' + oge.key + \'.all\' | translate}}"\n  placeholder-text="{{ oge.placeholderText }}"\n  readonly="oge.readonly">\n</condition-group-editor>\n\n<condition-group-editor\n  id="{{oge.key}}-any"\n  class="details-group"\n  condition-group="oge.objectGroup.orConditions"\n  items="oge.items"\n  section-label="{{\'queue.query.builder.\' + oge.key + \'.some\' | translate}}"\n  placeholder-text="{{ oge.placeholderText }}"\n  readonly="oge.readonly">\n</condition-group-editor>\n'),e.put("liveops-config-panel-shared/directives/queryEditor/proficiency/proficiencySelector.html",'<div>\n  <select ng-model="operator" class="pull-left proficiency-operator-dropdown">\n    <option value=">=">{{ \'queue.query.builder.at.least\' | translate }}</option>\n    <option value="<=">{{ \'queue.query.builder.at.most\' | translate }}</option>\n    <option value="=">{{ \'queue.query.builder.exactly\' | translate }}</option>\n  </select>\n  <number-slider value="proficiency"\n    min-value="1" max-value="100" class="proficiency-value pull-left">\n  </number-slider>\n</div>\n')
}]),angular.module("liveopsConfigPanel.shared.directives").controller("DropdownController",["$scope","$document","$element",function(e,n,t){var r=this;e.showDrop=!1,this.setShowDrop=function(n){e.showDrop=n},e.$watch("showDrop",function(e,t){n.off("click",r.onClick),e&&!t&&n.on("click",r.onClick)}),this.onClick=function(o){var i=t.find(o.target).length>0;i||(e.$apply(function(){e.showDrop=!1,e.hovering=!1}),n.off("click",r.onClick))}}]),angular.module("liveopsConfigPanel.shared.directives").directive("dropdown",[function(){return{scope:{items:"=",label:"@",valuePath:"@",displayPath:"@",collapseIcon:"@",expandIcon:"@",orderBy:"@",hovering:"=?",hoverTracker:"=?",showOnHover:"="},templateUrl:"liveops-config-panel-shared/directives/dropdown/dropdown.html",controller:"DropdownController",link:function(e,n,t,r){e.valuePath=e.valuePath?e.valuePath:"value",e.displayPath=e.displayPath?e.displayPath:"label","undefined"!=typeof e.hovering&&e.hoverTracker&&e.hoverTracker.push(r),e.clearOtherHovers=function(){angular.forEach(e.hoverTracker,function(e){e!==r&&e.setShowDrop(!1)})},e.orderBy||(e.orderBy="label"),e.optionClick=function(n){e.showDrop=!1,e.hovering=!1,angular.isFunction(n)&&n()},e.collapseIcon||(e.collapseIcon="fa fa-caret-up"),e.expandIcon||(e.expandIcon="fa fa-caret-down"),e.mouseIn=function(){(e.hovering||e.showOnHover)&&(e.showDrop=!0,e.clearOtherHovers())},e.dropClick=function(){e.showDrop=!e.showDrop,e.hovering=!e.hovering}}}}]),angular.module("liveopsConfigPanel.shared.directives").directive("filterDropdown",["$filter",function(e){return{scope:{id:"@",options:"=",valuePath:"@",displayPath:"@",label:"@",showAll:"@",orderBy:"@"},templateUrl:"liveops-config-panel-shared/directives/dropdown/filterDropdown.html",controller:"DropdownController",link:function(n,t){if(t.parent().css("overflow","visible"),n.valuePath=n.valuePath?n.valuePath:"value",n.displayPath=n.displayPath?n.displayPath:"display",n.checkItem=function(e){e.checked=!e.checked,n.$emit("dropdown:item:checked",e)},n.showAll){n.$watch("options",function(t,o){var i=e("filter")(n.options,{checked:!0},!0);n.all.checked&&t.length>o.length?r():n.all.checked=i.length===n.options.length?!0:!1},!0),n.toggleAll=function(){n.all.checked=!n.all.checked,n.all.checked&&r()};var r=function(){angular.forEach(n.options,function(e){e.checked=!0})},o=!0;angular.forEach(n.options,function(e){o=o&&("undefined"==typeof e.checked?!0:e.checked)}),n.all={checked:o},o&&r()}else n.$watch("options",function(){angular.forEach(n.options,function(e){e.checked="undefined"==typeof e.checked?!0:e.checked})})}}}]),angular.module("liveopsConfigPanel.shared.directives").controller("EditFieldController",function(e){e.saveHandler=function(n){n&&n.target.blur(),e.$emit("editField:save",{objectId:e.objectId,fieldName:e.name,fieldValue:e.ngModel})},e.$on(e.name+":save",function(){e.edit=!1})}),angular.module("liveopsConfigPanel.shared.directives").directive("formError",function(){return{templateUrl:"liveops-config-panel-shared/directives/formError/formError.html",scope:{field:"="},link:function(e,n,t){e.errorTypes={},angular.forEach(t.$attr,function(n,r){if(r.match(/errorType+/)){var o=r.replace(/errorType/,""),i=o.charAt(0);o=o.replace(/^\w/,i.toLowerCase()),e.errorTypes[o]=t[r],t.$observe(r,function(n){e.errorTypes[o]=n})}}),e.isString=function(e){return angular.isString(e)}}}}),angular.module("liveopsConfigPanel.shared.directives").directive("formFieldValidationMessage",function(){return{templateUrl:"liveops-config-panel-shared/directives/formFieldValidationMessage/formFieldValidationMessage.html",require:"^form",scope:{fieldName:"@"},link:function(e,n,t,r){e.form=r,e.errorTypes={},angular.forEach(t.$attr,function(n,r){if(r.match(/errorType+/)){var o=r.replace(/errorType/,""),i=o.charAt(0);o=o.replace(/^\w/,i.toLowerCase()),t.$observe(r,function(n){e.errorTypes[o]=n})}}),e.isString=function(e){return angular.isString(e)}}}}),angular.module("liveopsConfigPanel.shared.directives").directive("helpIcon",["$document","$compile",function(e,n){return{templateUrl:"liveops-config-panel-shared/directives/helpIcon/helpIcon.html",scope:{text:"@",translateValue:"@"},link:function(t,r){t.target=r;var o;t.showTooltip=function(){o=n('<tooltip target="target" text="{{text}}" translate-value="{{translateValue}}"></tooltip>')(t),e.find("body").append(o)},t.destroyTooltip=function(){o.remove()}}}}]),angular.module("liveopsConfigPanel.shared.directives").directive("highlightOnClick",["$window",function(e){return{restrict:"A",link:function(n,t){t.on("click",function(){e.getSelection().toString()||this.setSelectionRange(0,this.value.length)})}}}]),angular.module("liveopsConfigPanel.shared.directives").directive("loDuplicateValidator",["_",function(e){return{restrict:"A",require:"ngModel",scope:{loDuplicateValidatorItems:"=",loDuplicateValidatorOptions:"="},link:function(n,t,r,o){o.$validators.duplicate=function(t,r){var o=n.loDuplicateValidatorOptions.comparer||function(e){return e===t},i={modelValue:t,viewValue:r};return 0===e.filter(n.loDuplicateValidatorItems,o,i).length}}}}]),angular.module("liveopsConfigPanel.shared.directives").directive("loMultibox",["$timeout",function(e){return{restrict:"E",scope:{items:"=",selectedItem:"=",resourceName:"@",name:"@",onItemSelect:"="},templateUrl:"liveops-config-panel-shared/directives/loMultibox/loMultibox.html",controller:"DropdownController",link:function(n,t,r,o){n.onSelect=function(e){angular.isString(e)||(n.display=e.getDisplay(),angular.isFunction(n.onItemSelect)&&n.onItemSelect(e),o.setShowDrop(!1),n.createMode=!1)},n.createItem=function(){n.$emit("resource:details:create:"+n.resourceName,n.selectedItem),n.createMode=!0},n.labelClick=function(){o.setShowDrop(!n.showDrop),n.selectedItem=null,n.showDrop&&e(function(){var e=t.find("type-ahead input");e.focus()})},n.$watch("selectedItem",function(e){angular.isString(e)||e&&angular.isFunction(e.getDisplay)&&(n.display=e.getDisplay())},!0),n.$on("resource:details:"+n.resourceName+":canceled",function(){n.createMode=!1}),n.$on("created:resource:"+n.resourceName,function(e,t){n.createMode&&n.onSelect(t)})}}}]),angular.module("liveopsConfigPanel.shared.directives").directive("loSubmitSpinner",[function(){return{scope:{loSubmitSpinnerStatus:"&"},link:function(e,n){e.spinnerElement=angular.element('<a disabled="true"><i class="fa fa-refresh fa-spin"></i></a>'),e.spinnerElement.addClass(n[0].className),e.spinnerElement.addClass("ng-hide"),n.after(e.spinnerElement),e.$watch("loSubmitSpinnerStatus()",function(t){angular.isDefined(t)&&(n.toggleClass("ng-hide",t),e.spinnerElement.toggleClass("ng-hide",!t))})}}}]),angular.module("liveopsConfigPanel.shared.directives").directive("loValidate",[function(){return{require:"ngModel",link:function(e,n,t,r){function o(){angular.extend(r.$disabledValidators,r.$validators),r.$validators={},angular.extend(r.$disabledFormatters,r.$formatters),r.$formatters={};for(var e in r.$disabledValidators)r.$setValidity(e,!0)}function i(){angular.extend(r.$validators,r.$disabledValidators),r.$disabledValidators={},angular.extend(r.$formatters,r.$disabledFormatters),r.$disabledFormatters={}}r.$disabledValidators={},r.$disabledFormatters={},e.$watch(t.loValidate,function(e){e?i():o()},!0)}}}]),angular.module("liveopsConfigPanel.shared.directives").directive("loading",[function(){return{restrict:"E",templateUrl:"liveops-config-panel-shared/directives/loading/loading.html"}}]),angular.module("liveopsConfigPanel.shared.directives").directive("modal",[function(){return{restrict:"E",templateUrl:"liveops-config-panel-shared/directives/modal/modal.html"}}]),angular.module("liveopsConfigPanel.shared.directives").directive("ngResource",[function(){return{restrict:"A",controller:function(){}}}]),angular.module("liveopsConfigPanel.shared.directives").directive("numberSlider",["$timeout",function(e){return{restrict:"E",scope:{value:"=",minValue:"@",maxValue:"@",hasHandles:"=",placeholder:"@",ngChanged:"&"},templateUrl:"liveops-config-panel-shared/directives/numberSlider/numberSlider.html",link:function(n,t){n.minValue=n.minValue?Number(n.minValue):null,n.maxValue=n.maxValue?Number(n.maxValue):null,n.$watch("value",function(){n.value&&("string"==typeof n.value&&(n.value=Number(n.value.replace(/[^0-9\\.\\-]/g,""))),null!==n.maxValue&&n.value>n.maxValue&&(n.value=n.maxValue),null!==n.minValue&&n.value<n.minValue&&(n.value=n.minValue),n.ngChanged(n.value))}),n.increment=function(){return n.value?void((null===n.maxValue||n.value<n.maxValue)&&(n.value=Number(n.value)+1,n.ngChanged())):(n.value=n.minValue?n.minValue:0,void n.ngChanged())},n.decrement=function(){return n.value?void((null===n.minValue||n.value>n.minValue)&&(n.value=Number(n.value)-1,n.ngChanged())):(n.value=n.minValue?n.minValue:0,void n.ngChanged())},t.find("input").bind("keydown keypress",function(t){40===t.which?(e(n.decrement),t.preventDefault()):38===t.which&&(e(n.increment),t.preventDefault())})}}}]),angular.module("liveopsConfigPanel.shared.directives").directive("resizeHandle",["$window","$document","$rootScope","lodash",function(e,n,t,r){return{restrict:"E",scope:{leftElementId:"@",rightElementId:"@"},templateUrl:"liveops-config-panel-shared/directives/resizeHandle/resizeHandle.html",link:function(e,o){function i(n){var t=e.leftTargetElement[0].offsetWidth,r=e.rightTargetElement[0].offsetWidth,o=e.leftTargetElement[0].getBoundingClientRect(),i=o.left,a=n.pageX;a-=i,e.resizeElements(t,r,a)}o.addClass("resize-pane"),e.leftTargetElement=angular.element($("#"+e.leftElementId)),e.rightTargetElement=angular.element($("#"+e.rightElementId)),o.on("mousedown",function(t){2!==t.button&&(t.preventDefault(),n.on("mousemove",i),n.on("mouseup",e.mouseup))}),e.resizeElements=function(n,t,r){var o=n-r,i=n-o,a=t+o,s=parseInt(e.leftTargetElement.css("min-width")),l=parseInt(e.rightTargetElement.css("min-width"));if(!(l>a||s>i)){e.leftTargetElement.css("width",i+"px"),e.rightTargetElement.css("width",a+"px");var u={leftWidth:i,rightWidth:a};e.sendResizeEvent(u),e.applyClasses(u,e.leftTargetElement,"leftWidth"),e.applyClasses(u,e.rightTargetElement,"rightWidth")}},e.sendResizeEvent=r.throttle(function(e){t.$broadcast("resizehandle:resize",e)},500),e.applyClasses=function(e,n,t){e[t]>700?n.addClass("two-col"):n.removeClass("two-col"),e[t]<450?n.addClass("compact-view"):n.removeClass("compact-view")},e.mouseup=function(){n.unbind("mousemove",i),n.unbind("mouseup",e.mouseup)}}}}]),angular.module("liveopsConfigPanel.shared.directives").directive("scrollTable",[function(){return{restrict:"A",replace:"true",compile:function(e){e.removeAttr("scroll-table");var n=e.find("thead").height();0===n&&(n=35);var t=e.find("thead").clone(!0,!0);t.find("th").css("height",n+"px");var r=angular.element('<table class="clone-header">'+t[0].outerHTML+"</table>"),o=e[0].className;return r.addClass(o),e.find("thead").find("input").remove(),e.replaceWith('<div class="scrollable-table-container" style="padding-top:'+n+'px;">'+r[0].outerHTML+'<div class="table-wrapper"><div>'+e[0].outerHTML+"</div></div></div>"),function(e,t,r){r.maxHeight&&e.$watch(function(){return t.find("tbody").find("tr").length},function(e){if(e>0){var o=n*e;o<r.maxHeight?t.css("height",o+n+5+"px"):t.css("height",r.maxHeight+"px")}})}}}}]),angular.module("liveopsConfigPanel.shared.directives").directive("separateValidation",[function(){return{restrict:"A",require:"?form",link:function(e,n,t,r){if(r){var o=n.parent().controller("form");o&&o.$removeControl(r);var i={$setValidity:function(){r.$invalid=!1,angular.forEach(n.find("input"),function(e){if(r[e.name]&&r[e.name].$error)for(var n in r[e.name].$error)if(n&&r[e.name].$error[n]){r.$invalid=!0;break}})},$setDirty:function(){r.$dirty=!0},$setPristine:function(e){r.$pristine=e}};angular.extend(r,i)}}}}]),angular.module("liveopsConfigPanel.shared.directives").directive("singleElementResizeHandle",["$window","$document","$rootScope","lodash",function(e,n,t,r){return{restrict:"E",scope:{elementId:"@",minWidth:"@",maxWidth:"@"},templateUrl:"liveops-config-panel-shared/directives/singleElementResizeHandle/singleElementResizeHandle.html",link:function(o,i){function a(n){var t=o.targetElement[0].offsetWidth,r=n.pageX,i=e.innerWidth;o.resizeElement(t,i,r)}o.targetElement=angular.element(document.getElementById(o.elementId)),i.on("mousedown",function(e){2!==e.button&&(e.preventDefault(),n.on("mousemove",a),n.on("mouseup",o.mouseup))}),o.applyClasses=function(e,n){e>700?n.addClass("two-col"):n.removeClass("two-col"),450>e?n.addClass("compact-view"):n.removeClass("compact-view")},o.mouseup=function(){n.unbind("mousemove",a),n.unbind("mouseup",o.mouseup)},o.sendResizeEvent=r.throttle(function(e){t.$broadcast("resizehandle:resize",e)},500),o.resizeElement=function(e,n,t){var r=n-t;r<o.minWidth||r>o.maxWidth||(o.targetElement.css("width",r+"px"),o.sendResizeEvent(r),o.applyClasses(r,o.targetElement))}}}}]),angular.module("liveopsConfigPanel.shared.directives").controller("dateToMinuteConverterController",[function(){this.format=function(e){return-1===e?null:angular.isNumber(e)?new Date(0,0,0,0,e,0,0):e},this.parse=function(e){return null===e?-1:e instanceof Date?60*e.getHours()+e.getMinutes():e}}]).directive("dateToMinuteConverter",[function(){return{require:"ngModel",controller:"dateToMinuteConverterController",link:function(e,n,t,r){var o=n.data("$dateToMinuteConverterController");r.$formatters.push(o.format),r.$parsers.push(o.parse)}}}]),angular.module("liveopsConfigPanel.shared.directives").directive("utcDateConverter",["$moment",function(e){return{restrict:"A",require:"ngModel",link:function(n,t,r,o){o.$parsers.push(function(n){return n?e.utc(n):n}),o.$formatters.push(function(e){return e?e.toDate():e})}}}]),angular.module("liveopsConfigPanel.shared.directives").directive("confirmToggle",["Modal",function(e){return{require:["ngModel","^toggle"],link:function(n,t,r,o){o[0].$parsers.push(function(e){return n.onToggle(e)}),n.onToggle=function(t){return n.$evalAsync(function(){n.$parent.ngModel=t===n.trueValue?n.falseValue:n.trueValue}),e.showConfirm({message:t===n.trueValue?n.confirmEnableMessage:n.confirmDisableMessage}).then(function(){n.$parent.ngModel=t})}}}}]),angular.module("liveopsConfigPanel.shared.directives").directive("toggle",[function(){return{templateUrl:"liveops-config-panel-shared/directives/toggle/toggle.html",scope:{ngModel:"=",ngDisabled:"=",name:"@",trueValue:"@",falseValue:"@",confirmEnableMessage:"@",confirmDisableMessage:"@"},controller:function(e){angular.isUndefined(e.trueValue)&&(e.trueValue=!0),angular.isUndefined(e.falseValue)&&(e.falseValue=!1),angular.isDefined(e.confirmEnableMessage)&&angular.isDefined(e.confirmDisableMessage)&&(e.confirmOnToggle=!0)}}}]),angular.module("liveopsConfigPanel.shared.directives").directive("tooltip",["$document","$timeout",function(e,n){return{templateUrl:"liveops-config-panel-shared/directives/tooltip/tooltip.html",scope:{text:"@",target:"=",translateValue:"@"},link:function(t,r){t.targetPosition=t.target.offset(),t.tooltipWidth=0,t.tooltipHeight=0,t.setPosition=function(){r.find("div").removeClass("top left right bottom"),t.tooltipWidth=r.outerWidth(),t.tooltipHeight=r.outerHeight();var e=t.getPositionClass(),n=t.getAbsolutePosition(e);r.find("div").addClass(e),r.css("left",n.left),r.css("top",n.top)},t.getPositionClass=function(){var n,r=e.width(),o=e.height(),i=t.targetPosition.top,a=t.targetPosition.left;return n=i-t.tooltipHeight<0?a-t.tooltipWidth<0?"bottom right":a+t.tooltipWidth>r?"bottom left":"bottom center":i+t.tooltipHeight>o?a-t.tooltipWidth<0?"top right":a+t.tooltipWidth>r?"top left":"top center":a-t.tooltipWidth<0?"center right":a+t.tooltipWidth>r?"center left":"top center"},t.getAbsolutePosition=function(e){var n=15,r=13,o=25,i=t.target.outerHeight(),a=t.target.outerWidth(),s=t.targetPosition.left,l=t.targetPosition.top;return e.indexOf("left")>-1&&(s+=-t.tooltipWidth-r),e.indexOf("right")>-1&&(s+=a+r),"bottom center"===e?(l+=i+n,s+=-((t.tooltipWidth-a)/2)):"top center"===e?(l+=-(t.tooltipHeight+n),s+=-((t.tooltipWidth-a)/2)):"top right"===e||"top left"===e?l+=-t.tooltipHeight+o:("center right"===e||"center left"===e)&&(l+=-(t.tooltipHeight/2)+i/2),{top:l,left:s}},n(t.setPosition,1)}}}]),angular.module("liveopsConfigPanel.shared.directives").directive("typeAhead",["$filter","$timeout",function(e,n){return{restrict:"E",scope:{items:"=",nameField:"@",onSelect:"&",placeholder:"@",prefill:"=",keepExpanded:"=",onEnter:"&",filters:"=?",selectedItem:"=?"},templateUrl:"liveops-config-panel-shared/directives/typeAhead/typeAhead.html",controller:function(n){var t=this;n.currentText=n.prefill||"",this.defaultTextFilter=function(e,n){return e.getDisplay().toLowerCase().contains(n.toLowerCase())},n.filterCriteria=function(e){if(n.filterArray){for(var t=!0,r=0;r<n.filterArray.length;r++){var o=n.filterArray[r];t=t&&o.call(o,e,n.currentText,n.items)}return t}},n.$watch("filters",function(e){n.filterArray=[],e&&angular.isArray(e)?n.filterArray=angular.copy(e):e&&!angular.isArray(e)&&(n.filterArray=[e]),n.filterArray.push(t.defaultTextFilter)},!0),n.updateHighlight=function(){var t=e("filter")(n.items,n.filterCriteria,!0);if(""===n.currentText)n.highlightedItem=null,n.selectedItem=null;else if(t&&t.length>0){var r=t.indexOf(n.highlightedItem);0>r&&(n.highlightedItem=null,n.selectedItem=n.currentText),angular.isDefined(t[0].getDisplay)&&t[0].getDisplay()===n.currentText?(n.highlightedItem=t[0],n.selectedItem=t[0]):(n.highlightedItem=t[0],n.selectedItem=n.currentText)}else n.highlightedItem=null,n.selectedItem=n.currentText},n.$watch("currentText",function(){n.updateHighlight()}),n.$watch("selectedItem",function(e){null===e&&(n.currentText="")}),n.$watch("items",function(e){angular.isDefined(e)&&n.updateHighlight()},!0),n.select=function(e){angular.isString(e)||(n.currentText=angular.isDefined(e.getDisplay)?e.getDisplay():e[n.nameField]),n.selectedItem=e,n.onSelect({selectedItem:e}),n.keepExpanded||(n.hovering=!1,n.showSuggestions=!1)},n.onBlur=function(){n.keepExpanded||(n.showSuggestions=!1)},n.orderByFunction=function(e){var t=e.getDisplay();return t?t:e[n.nameField]}},link:function(e,t){t.find("input").bind("keydown keypress",function(r){var o;13===r.which?(n(function(){var n=e.highlightedItem?e.highlightedItem:e.currentText;e.select(n),e.onEnter({item:n})}),r.preventDefault()):40===r.which?(o=e.filtered.indexOf(e.highlightedItem),o+1<e.filtered.length&&n(function(){e.highlightedItem=e.filtered[o+1];var n=t.find("li:nth-child("+(o+2)+")");e.showListElement(n)})):38===r.which&&(o=e.filtered.indexOf(e.highlightedItem),o-1>=0&&n(function(){e.highlightedItem=e.filtered[o-1];var n=t.find("li:nth-child("+o+")");e.showListElement(n)}))}),e.showListElement=function(e){var n=e.get(0).offsetTop,r=e.get(0).offsetHeight,o=n+r,i=t.find("ul").get(0).offsetHeight,a=t.find("ul").get(0).scrollTop;o>a+i?t.find("ul").get(0).scrollTop=o-i:a>n&&(t.find("ul").get(0).scrollTop=n)}}}}]),angular.module("liveopsConfigPanel.shared.directives").directive("uuid",[function(){return{restrict:"A",require:"ngModel",link:function(e,n,t,r){r.$validators.uuid=function(e,n){return r.$isEmpty(e)?!0:/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i.test(n)?!0:!1}}}}]),function(){angular.module("liveopsConfigPanel.shared.directives").directive("zermeloEscalationListValidator",["ZermeloEscalationList","jsedn",function(e){return{restrict:"A",require:"ngModel",link:function(n,t,r,o){function i(n){var t=null;try{t=e.fromEdn(n)}catch(r){}return o.$setValidity("zermelo",!!t),n}o.$parsers.unshift(i),o.$formatters.unshift(i)}}}])}(),function(){angular.module("liveopsConfigPanel.shared.directives").directive("zermeloQueryValidator",["ZermeloQuery","jsedn",function(e){return{restrict:"A",require:"ngModel",link:function(n,t,r,o){function i(n){var t=null;try{t=e.fromEdn(n)}catch(r){}return o.$setValidity("zermelo",!!t),n}o.$parsers.unshift(i),o.$formatters.unshift(i)}}}])}(),angular.module("liveopsConfigPanel.shared.filters").filter("hasPermission",["UserPermissions",function(e){return function(n){return angular.isArray(n)||(n=[n]),e.hasPermissionInList(n)}}]),angular.module("liveopsConfigPanel.shared.filters").filter("keysCount",[function(){return function(e){return Object.keys(e).length}}]),angular.module("liveopsConfigPanel.shared.filters").filter("matchesField",["$filter",function(e){return function(n,t,r){var o=function(n,t,r){if(!(angular.isUndefined(n)||angular.isUndefined(t)||""===t||angular.isUndefined(r))){var i=t.indexOf(":");if(i>-1){var a=t.substring(0,i),s=t.substring(i+1);return o(n[a],s,r)?n:void 0}if(angular.isArray(n)){for(var l=0;l<n.length;l++)if(n[l][t]===r)return n}else if(e("parse")(n,t)===r)return n}};return o(n,t,r)}}]),angular.module("liveopsConfigPanel.shared.filters").filter("objectNegation",function(){return function(e,n,t,r){var o=[];return angular.forEach(e,function(e){for(var i=!0,a=0;a<t.length;a++){var s=t[a];if(e[n]===s[r]){i=!1;break}}i&&o.push(e)}),o}}),angular.module("liveopsConfigPanel.shared.filters").filter("invoke",[function(){return function(e,n){return angular.isFunction(e)?e.call(n):e}}]),angular.module("liveopsConfigPanel.shared.filters").filter("parse",["$parse",function(e){return function(n,t){return e(t)(n)}}]),angular.module("liveopsConfigPanel.shared.filters").filter("search",["$parse",function(e){return function(n,t,r){function o(e){return e.replace(/([.+?^=!:${}()|\[\]\/\\])/g,"\\$1"),e.replace(/([*])/g,".*")}if(!t||!r)return n;var i=function(n,t){var r=[],o=e(n.path),a=o(t);return"string"==typeof a?r=[a]:"object"==typeof a&&angular.forEach(o(t),function(e){r="inner"in n?r.concat(i(n.inner,e)):[e]}),r},a=[];return angular.forEach(n,function(n){var s=new RegExp(o(r),"i"),l="";angular.forEach(t,function(t){"string"==typeof t?l+=e(t)(n)+" ":"object"==typeof t&&(l+=i(t,n).join(" ")+" ")}),s.test(l)&&a.push(n)}),a}}]),angular.module("liveopsConfigPanel.shared.filters").filter("selectedOptions",["$filter",function(e){return function(n,t){var r=[],o=e("invoke")(t.options);return angular.forEach(n,function(n){var i=!1;angular.forEach(o,function(o){var a=e("invoke")(o.value,o);!i&&o.checked&&e("matchesField")(n,t.name,a)&&(r.push(n),i=!0)})}),r}}]),angular.module("liveopsConfigPanel.shared.filters").filter("selectedTableOptions",["$parse","$filter",function(e,n){return function(t,r){var o=[];if(angular.isUndefined(t))return o;for(var i=0;i<t.length;i++){for(var a=t[i],s=!0,l=0;l<r.length;l++){var u=r[l];if(u.checked&&e("header.options")(u)){var c=!0,d=u.lookup?u.lookup:u.name,p=n("invoke")(u.header.options),f=n("filter")(p,{checked:!0},!0);if(0!==p.length){if(0===f.length)c=!1;else if(f.length!==p.length)for(var m=0;m<f.length;m++){var h=f[m],v=e(u.header.valuePath?u.header.valuePath:"value"),g=n("invoke")(v(h),h);if(n("matchesField")(a,d,g)){c=!0;break}c=!1}if(s=s&&c,!s)break}}}s&&o.push(a)}return o}}]),angular.module("liveopsConfigPanel.shared.filters").filter("localToUtcDate",["$moment",function(e){return function(n){return n?e.utc(n):n}}]),angular.module("liveopsConfigPanel.shared.filters").filter("minutesToTime",["$moment",function(e){return function(n){if(!angular.isNumber(n)||0>n)return null;var t=e();return t.hours(0),t.minutes(n),t.format("HH:mm")}}]),angular.module("liveopsConfigPanel.shared.filters").filter("moment",["$moment",function(e){return function(n,t){return e(n).format(t)}}]),angular.module("liveopsConfigPanel.shared.services").service("Alert",["toastr","$window",function(e,n){this.confirm=function(e,t,r){n.confirm(e)?t&&t():r&&r()},this.warning=function(){e.warning.apply(this,arguments)},this.success=function(){e.success.apply(this,arguments)},this.error=function(){e.error.apply(this,arguments)},this.info=function(){e.info.apply(this,arguments)}}]),angular.module("liveopsConfigPanel.shared.services").service("DirtyForms",["Alert","$translate",function(e,n){var t=this;this.forms=[],this.hasDirty=function(){var e=!1;return angular.forEach(t.forms,function(n){n.$dirty&&(e=!0)}),e},this.registerForm=function(e){t.forms.push(e)},this.removeForm=function(e){t.forms.removeItem(e)},this.confirmIfDirty=function(r){t.hasDirty()?e.confirm(n.instant("unsavedchanges.nav.warning"),r,angular.noop):r()}}]),angular.module("liveopsConfigPanel.shared.services").service("Session",["$rootScope","sessionKey","preferenceKey","$translate","$filter",function(e,n,t,r,o){var i=this;this.userSessionKey=n,this.userPreferenceKey=t,this.token=null,this.user=null,this.lang=null,this.tenants=null,this.tenant=null,this.activeRegionId=null,this.columnPreferences={},this.platformPermissions=null,this.set=function(e,n,t,r){this.token=t,this.setUser(e),this.setTenants(n),this.setPlatformPermissions(r),this.flush()},this.setTenants=function(e){if(this.tenants=e&&e.length>0?e:[{tenantId:"",name:r.instant("session.tenants.none")}],this.tenant){var n=o("filter")(this.tenants,{tenantId:this.tenant.tenantId});this.tenant=n.length>0?n[0]:this.tenants[0]}else this.tenant=this.tenants[0];this.flush()},this.setUser=function(e){this.user={id:e.id,displayName:e.getDisplay(),email:e.email},this.flush()},this.setToken=function(e){this.token=e,this.flush()},this.setPlatformPermissions=function(e){this.platformPermissions=e,this.flush()},this.setColumnPreferences=function(e){this.columnPreferences=e,this.flush()},this.destroy=function(){this.token=null,this.user=null,this.tenants=null,this.platformPermissions=null,localStorage.removeItem(this.userSessionKey)},this.setTenant=function(e){i.tenant={tenantId:e.tenantId,tenantName:e.tenantName,tenantPermissions:e.tenantPermissions},i.flush()},this.destroyAll=function(){this.destroy(),this.activeRegionId=null,this.lang="en",this.tenant=null,localStorage.removeItem(this.userPreferenceKey)},this.restore=function(){angular.extend(this,JSON.parse(localStorage.getItem(this.userSessionKey))),angular.extend(this,JSON.parse(localStorage.getItem(this.userPreferenceKey)))},this.isAuthenticated=function(){return this.token?this.token.indexOf("Token")<0:!1},this.flush=function(){localStorage.setItem(i.userSessionKey,JSON.stringify({token:i.token,user:i.user,tenants:i.tenants,platformPermissions:i.platformPermissions})),localStorage.setItem(i.userPreferenceKey,JSON.stringify({lang:i.lang,activeRegionId:i.activeRegionId,tenant:i.tenant,columnPreferences:i.columnPreferences}))},this.restore()}]),angular.module("liveopsConfigPanel.shared.services").service("cacheAddInterceptor",["queryCache",function(e){this.response=function(n){var t=Object.getPrototypeOf(n.resource),r=n.resource.cacheKey?n.resource.cacheKey():t.resourceName;return e.get(r)||e.put(r,[]),e.get(r).push(n.resource),n.resource}}]),angular.module("liveopsConfigPanel.shared.services").service("cacheRemoveInterceptor",["queryCache",function(e){this.response=function(n){var t=Object.getPrototypeOf(n.resource),r=n.resource.cacheKey?n.resource.cacheKey():t.resourceName;return e.get(r)&&e.get(r).removeItem(n.resource),n.resource}}]),angular.module("liveopsConfigPanel.shared.services").service("emitInterceptor",["$rootScope","$q","$location","apiHostname",function(e,n,t,r){this.response=function(n){var t=n.config.url.replace(r+"/v1",""),o=t.replace(/\//g,":"),i=Object.getPrototypeOf(n.resource);return 201===n.status?(e.$broadcast("created:resource:"+i.resourceName,n.resource),e.$broadcast("created:resource"+o,n.resource)):200===n.status&&(o=o.replace(/:[-\w]+$/,""),e.$broadcast("updated:resource:"+i.resourceName,n.resource),e.$broadcast("updated:resource"+o,n.resource)),n.resource}}]),angular.module("liveopsConfigPanel.shared.services").factory("LiveopsResourceFactory",["$http","$resource","$q","queryCache","lodash","resultTransformer",function(e,n,t,r,o,i){function a(e,n){return o.startsWith(e,"$")?void 0:n}function s(e){if(angular.isArray(e)){var n=function(n){return angular.forEach(e,function(e){e.response(n)}),n.resource},t={response:n};return t}return e}function l(e,n){return o.startsWith(e,"$")?void 0:n}return{create:function(t){function u(e){var n=angular.copy(e);return angular.forEach(n,function(e,r){var i=o.findIndex(t.updateFields,{name:r});(0>i||null===e&&t.updateFields[i].optional)&&delete n[r]}),n}function c(e){var n=u(e);return JSON.stringify(n,l)}function d(e){return JSON.stringify(e,a)}t.requestUrlFields=angular.isDefined(t.requestUrlFields)?t.requestUrlFields:{id:"@id",tenantId:"@tenantId",groupId:"@groupId",flowId:"@flowId",queueId:"@queueId",userId:"@userId",memberId:"@memberId"};var p=Array.prototype.concat(e.defaults.transformResponse,i),f=t.getRequestTransformer,m=t.getResponseTransformer?Array.prototype.concat(t.getResponseTransformer,p):p,h=t.queryRequestTransformer,v=t.queryResponseTransformer?Array.prototype.concat(t.queryResponseTransformer,p):p,g=t.putRequestTransformer?Array.prototype.concat(t.putRequestTransformer,c):c,y=t.putResponseTransformer?Array.prototype.concat(t.putResponseTransformer,p):p,I=t.postRequestTransformer?Array.prototype.concat(t.postRequestTransformer,d):d,w=t.postResponseTransformer?Array.prototype.concat(t.postResponseTransformer,p):p,k=t.deleteRequestTransformer,b=t.deleteResponseTransformer?Array.prototype.concat(t.deleteResponseTransformer,p):p,E={"Content-Type":"application/json"},C=n(t.endpoint,t.requestUrlFields,{query:{method:"GET",isArray:!0,headers:E,transformRequest:h,transformResponse:v,interceptor:s(t.queryInterceptor)},get:{method:"GET",headers:E,transformRequest:f,transformResponse:m,interceptor:s(t.getInterceptor)},update:{method:"PUT",headers:E,transformRequest:g,transformResponse:y,interceptor:s(t.updateInterceptor)},save:{method:"POST",headers:E,transformRequest:I,transformResponse:w,interceptor:s(t.saveInterceptor)},"delete":{method:"DELETE",headers:E,transformRequest:k,transformResponse:b,interceptor:s(t.saveInterceptor)}});C.prototype.resourceName=t.resourceName,C.prototype.$$backupSudoProperties=function(){var e={};return angular.forEach(this,function(n,t){t.match(/^\$[^$].*/g)&&!angular.isFunction(n)&&["$original","$busy","$resolved"].indexOf(t)<0&&(e[t]=n)}),e},C.prototype.$$restoreSudoProperties=function(e,n){angular.forEach(n,function(n,t){e[t]?angular.isObject(n)&&angular.extend(e[t],n):e[t]=n})};var T=C.get;C.get=function(e,n,t){var r=T.call(this,e,n,t);return r.$promise.then(function(e){return e.$original=angular.copy(e),e}),r};var $=C.query;C.query=function(e,n,t){var r=$.call(this,e,n,t);return r.$promise.then(function(e){return angular.forEach(e,function(e){e.$original=angular.copy(e)}),e}),r};var P=C.prototype.$save;C.prototype.$save=function(e,n,t){var r=P.call(this,e,n,t);return r.then(function(e){return e.$original=angular.copy(e),e}),r};var q=C.prototype.$update;return C.prototype.$update=function(e,n,t){var r=q.call(this,e,n,t);return r.then(function(e){return e.$original=angular.copy(e),e}),r},C.hasItem=function(e,n){var t=n?n:this.prototype.resourceName,i=r.get(t);if(!i)return!1;var a=o.find(i,e);return!!a},C.cachedGet=function(e,n,t){var i=n?n:this.prototype.resourceName,a=r.get(i);(!a||t)&&(r.put(i,[]),a=r.get(i));var s=o.find(a,e);if(!s){s=this.get(e);for(var l in e)s[l]=e[l];a.push(s),a.$promise=s.$promise}return s},C.cachedQuery=function(e,n,t){var o=n?n:this.prototype.resourceName;if(!r.get(o)||t){var i=this.query(e);return r.put(o,i),i}return r.get(o)},C.prototype.save=function(e,n,t){var r=this,o=this.isNew()?this.$save:this.$update;r.$busy=!0;var i=this.$$backupSudoProperties();return o.call(r,e,n,t).then(function(e){return r.$original=angular.copy(e),r.$original&&r.$original.$original&&delete r.$original.$original,r.$$restoreSudoProperties(e,i),e})["finally"](function(){r.$busy=!1})},C.prototype.reset=function(){for(var e in this.$original)e.match(/^\$.*/g)||angular.isFunction(this.$original[e])||(this[e]=angular.copy(this.$original[e]))},C.prototype.getDisplay=function(){return this.toString()},C.prototype.isNew=function(){return!(this.hasOwnProperty("created")||angular.isDefined(this.id))},C.prototype.$busy=!1,C}}}]),angular.module("liveopsConfigPanel.shared.services").factory("queryCache",["$cacheFactory",function(e){return e("queryCache")
}]),angular.module("liveopsConfigPanel.shared.services").factory("resultTransformer",[function(){return function(e){return e.result?e.result:e}}]),angular.module("liveopsConfigPanel.shared.services").service("Modal",["$document","$rootScope","$compile","$q",function(e,n,t,r){var o=this;this.showConfirm=function(i){var a={title:"",message:"",okCallback:angular.noop,cancelCallback:angular.noop},s=r.defer(),l=angular.extend(a,i),u=n.$new();u.modalBody="liveops-config-panel-shared/services/modal/confirmModal.html",u.title=l.title,u.message=l.message,u.okCallback=function(){o.close(),s.resolve("true"),l.okCallback()},u.cancelCallback=function(){o.close(),s.reject("false"),l.cancelCallback()};var c=t("<modal></modal>")(u);return e.find("body").append(c),s.promise},this.close=function(){e.find("modal").remove()}}]),angular.module("liveopsConfigPanel.shared.services").service("modelResetService",[function(){this.reset=function(e){if(!e.$original)throw new Error("Model does not support reset");if(e.$reset)return e.$reset();for(var n in e.$original)n.match(/^\$.*/g)||angular.isFunction(e.$original[n])||(e[n]=angular.copy(e.$original[n]))}}]),function(){angular.module("liveopsConfigPanel.shared.services").factory("ZermeloCondition",["jsedn",function(e){function n(e,n){this.tag=e,this.identifier=n,this.filter=null}return n.prototype.setFilter=function(){1===arguments.length&&(this.filter=arguments[0]),2===arguments.length&&(this.filter=[arguments[0],arguments[1]])},n.prototype.toEdn=function(){var n=this.filter instanceof Array?new e.List([new e.Symbol(this.filter[0]),this.filter[1]]):this.filter;return new e.Map([new e.Tagged(new e.Tag(this.tag),this.identifier),n])},n.fromEdn=function(t){if(t instanceof e.Map){var r=new n;if(r.tag="uuid",r.identifier=t.keys[0],r.filter=t.vals[0],!angular.isString(r.identifier))throw"condition must start with #uuid";if(r.filter instanceof e.List){if(2!==r.filter.val.length)throw"condition filter must be exactly length 2 if it is a list";r.filter=[r.filter.val[0].val,r.filter.val[1]]}else if(r.filter!==!0)throw"if condition filter is not a list, it must be true";return r}throw"condition must be a map"},n}])}(),function(){angular.module("liveopsConfigPanel.shared.services").factory("ZermeloConditionGroup",["jsedn","ZermeloCondition","_",function(e,n,t){function r(e){this.operator=e,this.conditions=[]}return r.prototype.getConditionIdentifiers=function(){for(var e=[],n=0;n<this.conditions.length;n++)e.push(this.conditions[n].identifier);return e},r.prototype.addCondition=function(e){this.conditions.push(e)},r.prototype.removeCondition=function(e){t.pull(this.conditions,e)},r.prototype.toEdn=function(n){for(var t=new e.List([new e.Symbol(this.operator)]),r=0;r<this.conditions.length;r++){var o=this.conditions[r].toEdn();(n||o)&&t.val.push(o)}return t.val.length>1||n?t:null},r.fromEdn=function(t){if(t instanceof e.List){var o=new r;o.operator=t.at(0).val;for(var i=1;i<t.val.length;i++)o.addCondition(n.fromEdn(t.val[i]));return o}throw"condition group must be a list"},r}])}(),function(){angular.module("liveopsConfigPanel.shared.services").factory("ZermeloEscalation",["_","ZermeloEscalationQuery","jsedn","ZermeloQuery",function(e,n,t,r){function o(){this.query=new n,this.afterSecondsInQueue=0}return o.ASIQ_KEY=new t.Keyword(":after-seconds-in-queue"),o.QUERY_KEY=new t.Keyword(":query"),o.prototype.hasConditions=function(){return this.query.hasConditions()},o.fromSingleQuery=function(e){var n=new o,t=r.fromEdn(e);return n.afterSecondsInQueue=0,n.query.groups=t.groups,n},o.prototype.toEdn=function(e){var n=new t.Map([]);return n.set(o.ASIQ_KEY,this.afterSecondsInQueue),n.set(o.QUERY_KEY,this.query.toEdn(e)),n},o.fromEdn=function(e){var r=new o;if(e instanceof t.List)return o.fromSimpleQuery(e);if(e instanceof t.Map){if(r.afterSecondsInQueue=e.at(o.ASIQ_KEY),r.query=n.fromEdn(e.at(o.QUERY_KEY)),!angular.isNumber(r.afterSecondsInQueue))throw"after seconds in queue must be a number";return r}throw"escalation query must be a map"},o}])}(),function(){angular.module("liveopsConfigPanel.shared.services").factory("ZermeloEscalationList",["_","ZermeloEscalation","jsedn",function(e,n,t){function r(){this.escalations=[]}return r.prototype.addEscalation=function(e){this.escalations.push(e)},r.prototype.removeEscalation=function(n){e.pull(this.escalations,n)},r.fromSingleQuery=function(e){try{var t=new r;return t.addEscalation(n.fromSingleQuery(e)),t}catch(o){}return null},r.fromEdn=function(o){try{if(angular.isString(o)){var i=e.startsWith(o,"{");if(o=t.parse(o),i)return r.fromSingleQuery(o)}if(o instanceof t.Vector){for(var a=new r,s=0;s<o.val.length;s++)if(a.addEscalation(n.fromEdn(o.val[s])),s>0&&a.escalations[s].afterSecondsInQueue<=a.escalations[s-1].afterSecondsInQueue)throw"after-seconds-in-queue must be increasing";return a}throw"escalation list must be a vector"}catch(l){}return null},r.prototype.toEdn=function(e){if(!e&&0===this.escalations.length)return null;for(var n=new t.Vector([]),r=0;r<this.escalations.length;r++)n.val.push(this.escalations[r].toEdn(e));return n},r}])}(),function(){angular.module("liveopsConfigPanel.shared.services").factory("ZermeloEscalationQuery",["_","jsedn","ZermeloObjectGroup","Skill","Group","TenantUser",function(e,n,t,r,o,i){function a(){this.groups=[]}return a.KEY_OBJECTS={":skills":r,":groups":o,":user-id":i},a.ALLOWED_KEYS=e.keys(a.KEY_OBJECTS),a.prototype.hasConditions=function(){for(var e=0;e<this.groups.length;e++)if(this.groups[e].hasConditions())return!0;return!1},a.prototype.getGroup=function(n){return e.findWhere(this.groups,{key:n})||null},a.prototype.setGroup=function(e,n){this.groups.push({key:e,objectGroup:n})},a.prototype.removeGroup=function(n){this.groups=e.filter(this.groups,function(e){return e.key!==n})},a.prototype.toEdn=function(e){for(var t=new n.Map([]),r=0;r<this.groups.length;r++){var o=this.groups[r];t.set(new n.Keyword(o.key),o.objectGroup.toEdn(e))}return t},a.fromEdn=function(r){var o=new a;if(r instanceof n.Map)return r.map(function(n,r){if(!e.includes(a.ALLOWED_KEYS,r.val))throw"group key must be in "+angular.toJson(a.ALLOWED_KEYS);o.setGroup(r.val,t.fromEdn(n))}),o;throw"escalation query must be a map"},a}])}(),function(){angular.module("liveopsConfigPanel.shared.services").factory("ZermeloObjectGroup",["jsedn","_","ZermeloConditionGroup",function(e,n,t){function r(){this.andConditions=new t("and"),this.orConditions=new t("or")}return r.prototype.hasConditions=function(){return this.andConditions.conditions.length>0||this.orConditions.conditions.length>0},r.prototype.toEdn=function(n){for(var t=new e.List([new e.Symbol("and")]),r=[this.andConditions,this.orConditions],o=0;o<r.length;o++){var i=r[o].toEdn(n);(n||i)&&t.val.push(i)}return t.val.length>1?t:null},r.fromEdn=function(n){if(n instanceof e.List){var o=new r;if("and"!==n.val[0].val)throw"object group must start with and";return n.map(function(n){if(n instanceof e.List)switch(n.at(0).val){case"and":o.andConditions=t.fromEdn(n);break;case"or":o.orConditions=t.fromEdn(n);break;default:throw"condition group must start with 'and' or 'or' but found "+n.at(0).val}}),o}throw"object group must be a list"},r}])}(),function(){angular.module("liveopsConfigPanel.shared.services").factory("ZermeloQuery",["_","ZermeloObjectGroup","jsedn",function(e,n,t){function r(){this.groups=[],this.afterSecondsInQueue=0}var o=[":groups",":skills",":id"];return r.ALLOWED_GROUP_KEYS=o,r.prototype.hasConditions=function(){for(var e=0;e<this.groups.length;e++)if(this.groups[e].objectGroup.hasConditions())return!0;return!1},r.prototype.getGroup=function(n){return e.findWhere(this.groups,{key:n})||null},r.prototype.setGroup=function(e,n){this.groups.push({key:e,objectGroup:n})},r.prototype.removeGroup=function(n){this.groups=e.filter(this.groups,function(e){return e.key!==n})},r.prototype.toEdn=function(e){for(var n=new t.Map([]),r=0;r<this.groups.length;r++){var o=this.groups[r],i=o.key,a=o.objectGroup.toEdn(e);(e||a)&&n.set(new t.Keyword(i),a)}return n},r.fromEdn=function(i){if(i instanceof t.Map){for(var a=new r,s=i.keys,l=0;l<s.length;l++){var u=s[l];if(!e.includes(o,u.val))throw"invalid key in query; must be in "+angular.toJson(o);a.setGroup(u.val,n.fromEdn(i.at(u)))}return a}throw"query must be a map"},r}])}(),angular.module("liveopsConfigPanel.shared.directives").directive("editFieldDropDown",function(){return{restrict:"E",transclude:!0,templateUrl:"liveops-config-panel-shared/directives/editField/dropDown/editField_DropDown.html",scope:{ngModel:"=",save:"=",objectId:"=",defaultText:"@",name:"@",label:"@",placeholder:"@"},controller:"EditFieldController"}}),angular.module("liveopsConfigPanel.shared.directives").directive("editField",function(){return{restrict:"E",templateUrl:"liveops-config-panel-shared/directives/editField/input/editField_input.html",scope:{ngModel:"=",save:"=",objectId:"=",name:"@",label:"@",type:"@",placeholder:"@"},controller:"EditFieldController"}}),function(){angular.module("liveopsConfigPanel.shared.directives").controller("ConditionGroupEditorController",["$scope","ZermeloCondition","_","$translate",function(e,n,t,r){var o=this;o.conditionGroup=e.conditionGroup,o.items=e.items,o.sectionLabel=e.sectionLabel,o.placeholderText=e.placeholderText,o.conditionProficiency=1,o.conditionOperator=">=",o.readonly=e.readonly,o.findItemForCondition=function(e){return t.findWhere(o.items,{id:e.identifier})},o.getConditionName=function(e){return e=o.findItemForCondition(e),e?e.getDisplay():r.instant("value.unknown")},o.prettyConditionFilter=function(e){var n=o.findItemForCondition(e);return n&&e.filter instanceof Array&&n.hasProficiency?e.filter[0]+" "+e.filter[1]:""},o.addSelectedCondition=function(){var e=new n("uuid",o.selectedItem.id);e.setFilter(!0),o.selectedItem.hasProficiency===!1?e.setFilter(">=",1):o.selectedItem.hasProficiency&&e.setFilter(o.conditionOperator,o.conditionProficiency),o.conditionGroup.addCondition(e),o.selectedItem=null},o.conditionsFilter=function(e){return!t.includes(o.conditionGroup.getConditionIdentifiers(),e.id)&&(e.active||!angular.isDefined(e.active))}}])}(),function(){angular.module("liveopsConfigPanel.shared.directives").directive("conditionGroupEditor",function(){return{restrict:"E",templateUrl:"liveops-config-panel-shared/directives/queryEditor/conditionGroup/conditionGroupEditor.html",controller:"ConditionGroupEditorController as cqe",scope:{conditionGroup:"=",items:"=",sectionLabel:"@",placeholderText:"@",readonly:"="}}})}(),function(){angular.module("liveopsConfigPanel.shared.directives").controller("EscalationEditorController",["$scope","ZermeloCondition","ZermeloObjectGroup","ZermeloEscalationList","_","$translate","Modal",function(e,n,t,r,o,i){var a=this;a.forms={},a.escalation=e.escalation,a.afterSecondsMultiplier=1,a.timeAmount=a.escalation.afterSecondsInQueue,a.minSecondsRequired=e.minSeconds,a.previousEscalation=e.previousEscalation,a.escalation.afterSecondsInQueue&&(a.afterSecondsMultiplier=a.escalation.afterSecondsInQueue%60===0?60:1,a.afterTimeInQueue=a.escalation.afterSecondsInQueue/a.afterTimeMultiplier),e.$watch("previousEscalation.afterSecondsInQueue",function(){a.checkMinValue()}),a.checkMinValue=function(){if(a.escalation&&a.forms.timeAfterForm&&a.forms.timeAfterForm.amount){var e=a.previousEscalation.afterSecondsInQueue<a.escalation.afterSecondsInQueue;a.forms.timeAfterForm.amount.$setValidity("minTime",e),e||a.forms.timeAfterForm.amount.$setTouched()}},a.afterTimeOptions=[{label:i.instant("queue.details.priorityUnit.seconds"),value:1},{label:i.instant("queue.details.priorityUnit.minutes"),value:60}],a.updateMultiplier=function(){switch(a.afterSecondsMultiplier){case 1:a.timeAmount=60*a.timeAmount;break;case 60:a.timeAmount=Math.ceil(a.timeAmount/60)}a.updateTimeInSeconds()},a.updateTimeInSeconds=function(){a.escalation.afterSecondsInQueue=a.timeAmount*a.afterSecondsMultiplier,a.checkMinValue()},a.minTimeRequired=function(e){return a.minSecondsRequired/e}}])}(),function(){angular.module("liveopsConfigPanel.shared.directives").directive("escalationEditor",function(){return{restrict:"E",templateUrl:"liveops-config-panel-shared/directives/queryEditor/escalation/escalationEditor.html",controller:"EscalationEditorController as ec",scope:{escalation:"=",previousEscalation:"=",minSeconds:"="}}})}(),function(){angular.module("liveopsConfigPanel.shared.directives").controller("EscalationListEditorController",["$scope","ZermeloEscalationList","ZermeloEscalation","Modal","$translate","_",function(e,n,t,r,o,i){var a=this;e.$watch(function(){return e.queryString},function(e){if(!a.escalationList||e&&e!==a.escalationList.toEdn().ednEncode()){a.advancedQuery=e;var t=n.fromEdn(e);if(t)return a.initEscalationList(t);a.isAdvancedMode=!0}}),e.$watch(function(){return a.escalationList},function(n){if(n){var t=n.toEdn();e.queryString=t?t.ednEncode():"()"}},!0),a.minSecondsForQuery=function(e){return e>0?a.escalationList.escalations[e-1].afterSecondsInQueue+1:0},a.removeEscalation=function(e){return e.hasConditions()?r.showConfirm({message:o.instant("queue.query.escalation.level.remove.confirm"),okCallback:function(){a.escalationList.removeEscalation(e)}}):a.escalationList.removeEscalation(e)},a.addEscalation=function(){var e=new t;e.afterSecondsInQueue=i.last(a.escalationList.escalations).afterSecondsInQueue+1,a.escalationList.addEscalation(e)},a.advancedQueryChanged=function(){e.queryString=a.advancedQuery;var t=n.fromEdn(e.queryString);t&&(a.initialAdvancedQuery||(a.initialAdvancedQuery=t))},a.advancedMode=function(){a.advancedQuery=a.escalationList.toEdn(!0).ednEncode(),a.initialAdvancedQuery=a.advancedQuery,a.isAdvancedMode=!0},a.basicMode=function(){var e=null;try{e=n.fromEdn(a.advancedQuery)}catch(t){}return e?(a.initEscalationList(e),void(a.isAdvancedMode=!1)):r.showConfirm({message:o.instant("queue.details.version.query.basic.invalid"),okCallback:function(){a.initEscalationList(n.fromEdn(a.initialAdvancedQuery)),a.isAdvancedMode=!1}})},a.initEscalationList=function(e){a.escalationList=e||new n}}])}(),function(){angular.module("liveopsConfigPanel.shared.directives").directive("queryListCreator",function(){return{restrict:"E",templateUrl:"liveops-config-panel-shared/directives/queryEditor/escalationList/escalationListEditor.html",controller:"EscalationListEditorController as qlc",scope:{queryString:"=",form:"="}}})}(),function(){angular.module("liveopsConfigPanel.shared.directives").controller("EscalationQueryEditorController",["$scope","ZermeloEscalationQuery","ZermeloObjectGroup","_","$translate","Modal",function(e,n,t,r,o,i){var a=this;a.escalationQuery=e.escalationQuery,a.addGroup=function(e){a.escalationQuery.setGroup(e,new t),a.possibleGroups.splice(a.possibleGroups.indexOf(e),1),a.currentGroup=""},a.verifyRemoveGroup=function(e){return a.escalationQuery.getGroup(e).objectGroup.hasConditions()?i.showConfirm({message:o.instant("queue.query.builder.remove.filter.confirm"),okCallback:function(){a.removeGroup(e)}}):a.removeGroup(e)},a.removeGroup=function(e){a.escalationQuery.removeGroup(e),a.possibleGroups.push(e)},a.possibleGroups=r.xor(r.pluck(a.escalationQuery.groups,"key"),n.ALLOWED_KEYS),a.isAdvancedMode=!1}])}(),function(){angular.module("liveopsConfigPanel.shared.directives").directive("escalationQueryEditor",function(){return{restrict:"E",templateUrl:"liveops-config-panel-shared/directives/queryEditor/escalationQuery/escalationQueryEditor.html",controller:"EscalationQueryEditorController as eqc",scope:{escalationQuery:"="}}})}(),function(){angular.module("liveopsConfigPanel.shared.directives").controller("ObjectGroupEditorController",["$scope","$translate","Session","Skill","Group","TenantUser","ZermeloEscalationQuery",function(e,n,t,r,o,i,a){var s=this;s.objectGroup=e.objectGroup,s.key=e.key,s.placeholderText=n.instant("queue.query.builder."+s.key+".placeholder"),s.readonly=e.readonly,s.modelType=a.KEY_OBJECTS[s.key],s.items=s.modelType.cachedQuery({tenantId:t.tenant.tenantId})}])}(),function(){angular.module("liveopsConfigPanel.shared.directives").directive("objectGroupEditor",function(){return{restrict:"E",templateUrl:"liveops-config-panel-shared/directives/queryEditor/objectGroup/objectGroupEditor.html",controller:"ObjectGroupEditorController as oge",scope:{objectGroup:"=",key:"=",readonly:"="}}})}(),function(){angular.module("liveopsConfigPanel.shared.directives").directive("proficiencySelector",function(){return{restrict:"E",templateUrl:"liveops-config-panel-shared/directives/queryEditor/proficiency/proficiencySelector.html",scope:{operator:"=",proficiency:"="}}})}(),function(){angular.module("liveopsConfigPanel.shared.directives").controller("ReadonlyQueryController",["$scope","ZermeloEscalationList",function(e,n){e.$watch("query",function(t){e.ednQuery=n.fromEdn(t),e.showBasicQuery=!!e.ednQuery})}])}(),angular.module("liveopsConfigPanel.shared.directives").directive("readonlyQuery",function(){return{restrict:"E",scope:{query:"="},transclude:!0,controller:"ReadonlyQueryController",link:function(e,n,t,r,o){o(e,function(e){n.append(e)})}}}),angular.module("liveopsConfigPanel.shared.directives").directive("validateCount",[function(){return{restrict:"A",require:"ngModel",link:function(e,n,t,r){e.$watchCollection(t.ngModel,function(e){e?r.$setValidity(t.name,!!e.length):r.$setValidity(t.name,!1)})}}}]),angular.module("liveopsConfigPanel.tenant.mock",["liveopsConfigPanel.mock"]).service("mockTenants",function(e){return[new e({id:"tenant-id"}),new e({id:"tenant-id-2"})]}).run(["$httpBackend","apiHostname","mockTenants",function(e,n,t){e.when("GET",n+"/v1/tenants/tenant-id").respond({result:t[0]}),e.when("GET",n+"/v1/tenants/tenant-id-2").respond({result:t[1]}),e.when("GET",n+"/v1/tenants?regionId=regionId1").respond({result:t}),e.when("GET",n+"/v1/tenants/tenant-id-0").respond(404)}]),angular.module("liveopsConfigPanel.shared.services").factory("Tenant",["LiveopsResourceFactory","apiHostname","emitInterceptor","queryCache","cacheAddInterceptor",function(e,n,t,r,o){var i=e.create({endpoint:n+"/v1/tenants/:id",resourceName:"Tenant",updateFields:[{name:"name"},{name:"description",optional:!0},{name:"active"},{name:"adminUserId"},{name:"timezone"}],saveInterceptor:[t,o],updateInterceptor:t});i.prototype.getDisplay=function(){return this.name};var a=i;return i.prototype.getAsArray=function(e){var n=r.get(e+"arr");if(!n){var t=a.get({id:e}),o=[t];return o.$promise=t.$promise,o.$resolved=!0,r.put(e+"arr",o),o}return n},i}]),angular.module("liveopsConfigPanel.shared.services").factory("Timezone",["$resource","$http","apiHostname","resultTransformer",function(e,n,t,r){return e(t+"/v1/timezones",{},{query:{method:"GET",isArray:!0,headers:{"Content-Type":"application/json"},transformResponse:Array.prototype.concat(n.defaults.transformResponse,r),cache:!0}})}]),angular.module("liveopsConfigPanel.timezone.mock",["liveopsConfigPanel.mock"]).service("mockTimezones",function(){return["America/Edmonton","America/Eirunepe","America/El_Salvador","America/Ensenada","America/Fort_Wayne","America/Fortaleza","America/Glace_Bay","America/Godthab","America/Goose_Bay","America/Grand_Turk","America/Grenada","America/Guadeloupe","America/Guatemala","America/Guayaquil","America/Guyana","America/Halifax"]}).run(["$httpBackend","apiHostname","mockTimezones",function(e,n,t){e.when("GET",n+"/v1/timezones").respond({result:t})}]),angular.module("liveopsConfigPanel.shared.services").factory("User",["LiveopsResourceFactory","apiHostname","cacheAddInterceptor","emitInterceptor","userUpdateTransformer",function(e,n,t,r,o){var i=e.create({endpoint:n+"/v1/users/:id",resourceName:"User",updateFields:[{name:"firstName",optional:!0},{name:"lastName",optional:!0},{name:"password"},{name:"externalId",optional:!0},{name:"personalTelephone",optional:!0}],saveInterceptor:[t,r],updateInterceptor:r,putRequestTransformer:o});return i.prototype.getDisplay=function(){if(this.firstName||this.lastName){var e=(this.firstName?this.firstName:"")+" "+(this.lastName?this.lastName:"");return e.trim()}return this.email},i}]).service("userUpdateTransformer",["Session",function(e){return function(n){return e.isAuthenticated()&&n.id!==e.user.id||(delete n.status,delete n.roleId),n}}]),angular.module("liveopsConfigPanel.user.mock",["liveopsConfigPanel.mock"]).service("mockUsers",function(e){return[new e({id:"userId1",status:"disabled",externalId:73795,lastName:"Lowe",firstName:"Munoz",email:"munoz.lowe@hivedom.org"}),new e({id:"userId2",status:"enabled",externalId:80232,lastName:"Oliver",firstName:"Michael",email:"michael.oliver@ezent.io"}),new e({id:"userId100",status:"enabled",externalId:80233,lastName:"Moon",firstName:"Jackie",email:"jackie.moon@liveops.com",displayName:"Jackie Moon"})]}).run(["$httpBackend","apiHostname","mockUsers",function(e,n,t){e.when("GET",n+"/v1/users/userId1?tenantId=tenant-id").respond({result:t[0]}),e.when("GET",n+"/v1/users/userId2?tenantId=tenant-id").respond({result:t[1]}),e.when("GET",n+"/v1/users/userId100?tenantId=tenant-id").respond({result:t[2]}),e.when("GET",n+"/v1/users?tenantId=tenant-id").respond({result:t}),e.when("GET",n+"/v1/users").respond({result:[t[0],t[1]]}),e.when("GET",n+"/v1/users/userId0?tenantId=tenant-id").respond(404),e.when("POST",n+"/v1/users").respond(t[2])}]),angular.module("liveopsConfigPanel.tenant.businessHour.mock",["liveopsConfigPanel.mock"]).service("mockBusinessHours",function(e){return[new e({id:"businessHourId1",name:"bh1",tenantId:"tenant-id",description:null,active:!0,timezone:"America/Argentina/Buenos_Aires",sunStartTimeMinutes:null,sunEndTimeMinutes:null,monStartTimeMinutes:null,monEndTimeMinutes:null,tueStartTimeMinutes:null,tueEndTimeMinutes:null,wedStartTimeMinutes:null,wedEndTimeMinutes:null,thuStartTimeMinutes:null,thuEndTimeMinutes:null,friStartTimeMinutes:null,friEndTimeMinutes:null,satEndTimeMinutes:null,satStartTimeMinutes:null,exceptions:[{id:"businessHourException1",businessHoursId:"businessHour1",date:"2016-12-10T00:00:00Z",tenantId:"tenant-id",description:null,isAllDay:!1,startTimeMinutes:0,endTimeMinutes:480},{id:"businessHourException2",businessHoursId:"businessHour1",date:"2016-12-10T00:00:00Z",tenantId:"tenant-id",description:null,isAllDay:!1,startTimeMinutes:60,endTimeMinutes:780}]}),new e({id:"businessHourId2",name:"bh1",tenantId:"tenant-id",description:null,active:!0,timezone:"America/Halifax",sunStartTimeMinutes:60,sunEndTimeMinutes:780,monStartTimeMinutes:null,monEndTimeMinutes:null,tueStartTimeMinutes:null,tueEndTimeMinutes:null,wedStartTimeMinutes:null,wedEndTimeMinutes:null,thuStartTimeMinutes:null,thuEndTimeMinutes:null,friStartTimeMinutes:null,friEndTimeMinutes:null,satEndTimeMinutes:null,satStartTimeMinutes:null,exceptions:[]})]}).run(["$httpBackend","apiHostname","mockBusinessHours",function(e,n,t){e.when("GET",n+"/v1/tenants/tenant-id/business-hours/businessHourId1").respond({result:t[0]}),e.when("GET",n+"/v1/tenants/tenant-id/business-hours/businessHourId2").respond({result:t[1]}),e.when("GET",n+"/v1/tenants/tenant-id/business-hours").respond({result:[t[0],t[1]]}),e.when("GET",n+"/v1/tenants/tenant-id/business-hours/businessHourId0").respond(404)}]),angular.module("liveopsConfigPanel.shared.services").service("businessHourTransformer",["BusinessHourException",function(e){this.transform=function(n){n.$exceptions=[];for(var t=0;t<n.exceptions.length;t++){var r=new e(n.exceptions[t]);n.$exceptions.push(r),delete n.exceptions[t]}}}]).service("businessHourInterceptor",["businessHourTransformer",function(e){this.response=function(n){var t=n.resource;return e.transform(t),t}}]).service("businessHourQueryInterceptor",["businessHourTransformer",function(e){this.response=function(n){return angular.forEach(n.resource,function(n){e.transform(n)}),n.resource}}]),angular.module("liveopsConfigPanel.shared.services").factory("BusinessHour",["LiveopsResourceFactory","apiHostname","emitInterceptor","cacheAddInterceptor","businessHourInterceptor","businessHourQueryInterceptor",function(e,n,t,r,o,i){var a=e.create({endpoint:n+"/v1/tenants/:tenantId/business-hours/:id",resourceName:"BusinessHour",updateFields:[{name:"name"},{name:"active"},{name:"timezone"},{name:"sunStartTimeMinutes",optional:!0},{name:"sunEndTimeMinutes",optional:!0},{name:"monStartTimeMinutes",optional:!0},{name:"monEndTimeMinutes",optional:!0},{name:"tueStartTimeMinutes",optional:!0},{name:"tueEndTimeMinutes",optional:!0},{name:"wedStartTimeMinutes",optional:!0},{name:"wedEndTimeMinutes",optional:!0},{name:"thuStartTimeMinutes",optional:!0},{name:"thuEndTimeMinutes",optional:!0},{name:"friStartTimeMinutes",optional:!0},{name:"friEndTimeMinutes",optional:!0},{name:"satStartTimeMinutes",optional:!0},{name:"satEndTimeMinutes",optional:!0}],getInterceptor:o,queryInterceptor:i,saveInterceptor:[t,r],updateInterceptor:t});return a.prototype.getDisplay=function(){return this.name},a}]),angular.module("liveopsConfigPanel.shared.services").factory("DispatchMapping",["LiveopsResourceFactory","apiHostname","emitInterceptor","cacheAddInterceptor",function(e,n,t,r){var o=e.create({endpoint:n+"/v1/tenants/:tenantId/dispatch-mappings/:id",resourceName:"DispatchMapping",updateFields:[{name:"name"},{name:"description",optional:!0},{name:"value",optional:!0},{name:"flowId",optional:!0},{name:"channelType",optional:!0},{name:"interactionField",optional:!0},{name:"active",optional:!0}],saveInterceptor:[t,r],updateInterceptor:t});return o.prototype.getDisplay=function(){return this.name},o}]),angular.module("liveopsConfigPanel.tenant.flow.mock",["liveopsConfigPanel.mock"]).service("mockFlows",function(e){return[new e({name:"f1",tenantId:"tenant-id",description:"A pretty good flow",id:"flowId1"}),new e({name:"f2",tenantId:"tenant-id",description:"Not as cool as the other flow",id:"flowId2"}),new e({name:"f3",tenantId:"tenant-id",description:"Das flow",id:"flowId3"})]}).run(["$httpBackend","apiHostname","mockFlows","Session",function(e,n,t,r){e.when("GET",n+"/v1/tenants/"+r.tenant.tenantId+"/flows/"+t[0].id).respond({result:t[0]}),e.when("GET",n+"/v1/tenants/"+r.tenant.tenantId+"/flows/"+t[1].id).respond({result:t[1]}),e.when("GET",n+"/v1/tenants/"+r.tenant.tenantId+"/flows").respond({result:t}),e.when("POST",n+"/v1/tenants/"+r.tenant.tenantId+"/flows").respond({result:t[2]})}]),angular.module("liveopsConfigPanel.shared.services").factory("Flow",["LiveopsResourceFactory","apiHostname","emitInterceptor","cacheAddInterceptor",function(e,n,t,r){var o=e.create({endpoint:n+"/v1/tenants/:tenantId/flows/:id",resourceName:"Flow",updateFields:[{name:"name"},{name:"description",optional:!0},{name:"activeVersion"},{name:"channelType",optional:!0},{name:"type"},{name:"active"}],saveInterceptor:[t,r],updateInterceptor:t});return o.prototype.getDisplay=function(){return this.name},o}]),angular.module("liveopsConfigPanel.tenant.group.mock",["liveopsConfigPanel.mock"]).service("mockGroups",function(e){return[new e({id:"groupId1",name:"groupName1",tenantId:"tenant-id"}),new e({id:"groupId2",name:"groupName2",tenantId:"tenant-id"}),new e({id:"groupId3",name:"groupName3",tenantId:"tenant-id"}),new e({id:"groupId100",name:"groupName100",description:"Does not exist yet!",tenantId:"tenant-id"})]}).run(["$httpBackend","apiHostname","mockGroups",function(e,n,t){e.when("GET",n+"/v1/tenants/tenant-id/groups/groupId1").respond({result:t[0]}),e.when("GET",n+"/v1/tenants/tenant-id/groups/groupId2").respond({result:t[1]}),e.when("GET",n+"/v1/tenants/tenant-id/groups/groupId3").respond({result:t[2]}),e.when("GET",n+"/v1/tenants/tenant-id/groups").respond({result:[t[0],t[1],t[2]]}),e.when("POST",n+"/v1/tenants/tenant-id/groups").respond({result:t[3]}),e.when("GET",n+"/v1/groups/groupId0").respond(404)}]),angular.module("liveopsConfigPanel.shared.services").factory("Group",["LiveopsResourceFactory","apiHostname","cacheAddInterceptor","emitInterceptor",function(e,n,t,r){var o=e.create({endpoint:n+"/v1/tenants/:tenantId/groups/:id",resourceName:"Group",updateFields:[{name:"name"},{name:"description",optional:!0},{name:"owner"},{name:"active",optional:!0}],saveInterceptor:[t,r],updateInterceptor:r});return o.prototype.getDisplay=function(){return this.name},o}]),angular.module("liveopsConfigPanel.shared.services").factory("Integration",["LiveopsResourceFactory","apiHostname","emitInterceptor",function(e,n,t){var r=e.create({endpoint:n+"/v1/tenants/:tenantId/integrations/:id",resourceName:"Integration",updateFields:[{name:"properties"},{name:"accountSid"},{name:"authToken"},{name:"webRtc"},{name:"active"}],updateInterceptor:t});return r.prototype.getDisplay=function(){return this.type},r}]),angular.module("liveopsConfigPanel.tenant.integration.mock",["liveopsConfigPanel.mock"]).service("mockIntegrations",function(e){return[new e({id:"integrationId1"}),new e({id:"integrationId2"})]}).run(["$httpBackend","apiHostname","mockIntegrations",function(e,n,t){e.when("GET",n+"/v1/tenants/tenant-id/integrations").respond({result:t}),e.when("GET",n+"/v1/tenants/tenant-id/integrations/integrationId1").respond({result:t[0]}),e.when("GET",n+"/v1/tenants/tenant-id/integrations/integrationId2").respond({result:t[1]})}]),angular.module("liveopsConfigPanel.shared.services").service("itemBackupInterceptor",[function(){this.response=function(e){var n=e.resource;return angular.isArray(n)||(n=[n]),angular.forEach(n,function(e){angular.forEach(e.items,function(e){e.$original=angular.copy(e)})}),e.resource}}]),angular.module("liveopsConfigPanel.tenant.list.mock",["liveopsConfigPanel.mock"]).service("mockLists",["List",function(e){return[new e({id:"listId1",listTypeId:"listTypeId1",items:[{field1:"string value",field2:33,field3:!0}]}),new e({id:"listId2",listTypeId:"listTypeId2"}),new e({id:"listId3",listTypeId:"listTypeId1"})]}]).run(["$httpBackend","apiHostname","mockLists",function(e,n,t){e.when("GET",n+"/v1/tenants/tenant-id/lists/listId1").respond({result:t[0]}),e.when("GET",n+"/v1/tenants/tenant-id/lists/listId2").respond({result:t[1]}),e.when("GET",n+"/v1/tenants/tenant-id/lists").respond({result:[t[0],t[1]]})}]),angular.module("liveopsConfigPanel.shared.services").factory("List",["LiveopsResourceFactory","apiHostname","emitInterceptor","queryCache","cacheAddInterceptor","itemBackupInterceptor",function(e,n,t,r,o,i){var a=e.create({endpoint:n+"/v1/tenants/:tenantId/lists/:id",resourceName:"List",updateFields:[{name:"name"},{name:"description",optional:!0},{name:"items"},{name:"active"}],getInterceptor:i,queryInterceptor:i,saveInterceptor:[t,o,i],updateInterceptor:[t,i]});return a.prototype.getDisplay=function(){return this.name},a}]),angular.module("liveopsConfigPanel.tenant.listType.mock",["liveopsConfigPanel.mock"]).service("mockListTypes",["ListType",function(e){return[new e({id:"listTypeId1",fields:[{type:"string",name:"field1",label:"String field",required:!0},{type:"number",name:"field2",label:"Number field",required:!1},{type:"boolean",name:"field3",label:"Bool field",required:!1}]}),new e({id:"listTypeId2",fields:[{type:"boolean",name:"field1",label:"Bool field",required:!0}]}),new e({id:"listTypeId3"})]}]).run(["$httpBackend","apiHostname","mockListTypes",function(e,n,t){e.when("GET",n+"/v1/tenants/tenant-id/list-types/listTypeId1").respond({result:t[0]}),e.when("GET",n+"/v1/tenants/tenant-id/list-types/listTypeId2").respond({result:t[1]}),e.when("GET",n+"/v1/tenants/tenant-id/list-types").respond({result:[t[0],t[1]]})}]),angular.module("liveopsConfigPanel.shared.services").factory("ListType",["LiveopsResourceFactory","apiHostname","emitInterceptor","queryCache","cacheAddInterceptor",function(e,n,t,r,o){var i=e.create({endpoint:n+"/v1/tenants/:tenantId/list-types/:id",resourceName:"ListType",updateFields:[{name:"name"},{name:"description",optional:!0}],saveInterceptor:[t,o],updateInterceptor:t});return i.prototype.getDisplay=function(){return this.name},i}]),angular.module("liveopsConfigPanel.tenant.media.mock",["liveopsConfigPanel.mock"]).value("medias",[{id:"m1"},{id:"m2"}]).run(function(e,n,t,r){e.when("GET",n+"/v1/tenants/"+t.tenant.tenantId+"/media").respond({result:r})}),angular.module("liveopsConfigPanel.shared.services").factory("Media",["LiveopsResourceFactory","apiHostname","cacheAddInterceptor","emitInterceptor",function(e,n,t,r){var o=e.create({endpoint:n+"/v1/tenants/:tenantId/media/:id",resourceName:"Media",updateFields:[{name:"name"},{name:"source"},{name:"type"},{name:"properties",optional:!0}],saveInterceptor:[t,r]});
return o.prototype.getDisplay=function(){return this.name},o}]),angular.module("liveopsConfigPanel.tenant.mediaCollection.mock",["liveopsConfigPanel.mock"]).service("mockMediaCollections",function(e){return[new e({id:"mc1"}),new e({id:"mc2"})]}).service("mockMedias",function(e){return[new e({id:"m1"}),new e({id:"m2"})]}).run(function(e,n,t,r,o){t.tenant={tenantId:"1"},e.when("GET",n+"/v1/tenants/1/media").respond(200,r),e.when("GET",n+"/v1/tenants/1/media-collections").respond(200,o),e.when("GET",n+"/v1/tenants/2/media").respond(200,r),e.when("GET",n+"/v1/tenants/2/media-collections").respond(200,o),e.when("GET",n+"/v1/tenants/3/media").respond(200,[]),e.when("GET",n+"/v1/tenants/3/media-collections").respond(200,[])}),angular.module("liveopsConfigPanel.shared.services").factory("MediaCollection",["LiveopsResourceFactory","apiHostname","cacheAddInterceptor","emitInterceptor","mediaCollectionMapCleanTransformer",function(e,n,t,r,o){var i=e.create({endpoint:n+"/v1/tenants/:tenantId/media-collections/:id",resourceName:"MediaCollection",updateFields:[{name:"name"},{name:"description",optional:!0},{name:"mediaMap",optional:!0},{name:"defaultMediaKey",optional:!0}],saveInterceptor:[t,r],putRequestTransformer:o});return i}]),angular.module("liveopsConfigPanel.shared.services").factory("Queue",["LiveopsResourceFactory","apiHostname","emitInterceptor","cacheAddInterceptor",function(e,n,t,r){var o=e.create({endpoint:n+"/v1/tenants/:tenantId/queues/:id",resourceName:"Queue",updateFields:[{name:"name"},{name:"description",optional:!0},{name:"activeVersion",optional:!0},{name:"active"}],saveInterceptor:[t,r],updateInterceptor:t});return o.prototype.getDisplay=function(){return this.name},o}]),angular.module("liveopsConfigPanel.tenant.queue.mock",["liveopsConfigPanel.mock"]).service("mockQueues",["Queue",function(e){return[new e({name:"q1",tenantId:"tenant-id",description:"A pretty good queue",id:"queueId1"}),new e({name:"q2",tenantId:"tenant-id",description:"Not as cool as the other queue",id:"queueId2"}),new e({name:"f3",tenantId:"tenant-id",description:"Das queue",id:"queueId3"})]}]).run(["$httpBackend","apiHostname","mockQueues","Session",function(e,n,t,r){e.when("GET",n+"/v1/tenants/"+r.tenant.tenantId+"/queues/"+t[0].id).respond({result:t[0]}),e.when("GET",n+"/v1/tenants/"+r.tenant.tenantId+"/queues/"+t[1].id).respond({result:t[1]}),e.when("GET",n+"/v1/tenants/"+r.tenant.tenantId+"/queues").respond({result:t}),e.when("POST",n+"/v1/tenants/"+r.tenant.tenantId+"/queues").respond({result:t[2]})}]),angular.module("liveopsConfigPanel.tenant.permission.mock",["liveopsConfigPanel.mock"]).service("mockTenantPermissions",function(e){return[new e({id:"permissionId1",name:"PERMISSION_1",tenantId:"tenant-id"}),new e({id:"permissionId2",name:"PERMISSION_2",tenantId:"tenant-id"}),new e({id:"permissionId3",name:"PERMISSION_3",tenantId:"tenant-id"})]}).run(["$httpBackend","apiHostname","mockTenantPermissions",function(e,n,t){e.when("GET",n+"/v1/tenants/tenant-id/permissions").respond({result:[t[0],t[1]]}),e.when("GET",n+"/v1/tenants/tenant-id/permissionId1").respond({result:t[0]}),e.when("GET",n+"/v1/tenants/tenant-id/permissionId2").respond({result:t[1]}),e.when("GET",n+"/v1/tenants/tenant-id/permissionId3").respond({result:t[2]})}]).service("mockPlatformPermissions",function(e){return[new e({id:"permissionId1",name:"PLATFORM_PERMISSION_1"}),new e({id:"permissionId2",name:"PLATFORM_PERMISSION_1"})]}).run(["$httpBackend","apiHostname","mockPlatformPermissions",function(e,n,t){e.when("GET",n+"/v1/permissions").respond({result:[t[0],t[1]]}),e.when("GET",n+"/v1/permissions/permissionId1").respond({result:t[0]}),e.when("GET",n+"/v1/permissions/permissionId2").respond({result:t[1]})}]),angular.module("liveopsConfigPanel.shared.services").factory("PlatformPermission",["LiveopsResourceFactory","apiHostname",function(e,n){var t=e.create({endpoint:n+"/v1/permissions/:id",resourceName:"PlatformPermission",updateFields:[]});return t.prototype.getDisplay=function(){return this.name},t}]),angular.module("liveopsConfigPanel.shared.services").factory("PlatformRole",["LiveopsResourceFactory","apiHostname",function(e,n){var t=e.create({endpoint:n+"/v1/roles:id",resourceName:"PlatformRole",updateFields:[{name:"name"},{name:"description",optional:!0},{name:"permissions",optional:!0}]});return t.prototype.getDisplay=function(){return this.name},t.getName=function(e){return t.cachedGet({id:e}).name},t}]),angular.module("liveopsConfigPanel.tenant.role.mock",["liveopsConfigPanel.mock"]).service("mockRoles",function(e){return[new e({id:"roleId1",name:"roleName1",tenantId:"tenant-id",permissions:[]}),new e({id:"roleId2",name:"roleName2",tenantId:"tenant-id",permissions:[]}),new e({id:"roleId3",name:"roleName3",description:"Does not exist yet!",tenantId:"tenant-id",permissions:[]})]}).run(["$httpBackend","apiHostname","mockRoles",function(e,n,t){e.when("GET",n+"/v1/tenants/tenant-id/roles").respond({result:[t[0],t[1]]}),e.when("GET",n+"/v1/tenants/tenant-id/roles/roleId1").respond({result:t[0]}),e.when("GET",n+"/v1/tenants/tenant-id/roles/roleId2").respond({result:t[1]})}]).service("mockPlatformRoles",function(e){return[new e({id:"roleId1",name:"roleName1",permissions:[]}),new e({id:"roleId2",name:"roleName2",permissions:[]})]}).run(["$httpBackend","apiHostname","mockPlatformRoles",function(e,n,t){e.when("GET",n+"/v1/roles").respond({result:[t[0],t[1]]}),e.when("GET",n+"/v1/roles/roleId1").respond({result:t[0]}),e.when("GET",n+"/v1/roles/roleId2").respond({result:t[1]})}]),angular.module("liveopsConfigPanel.shared.services").factory("TenantPermission",["LiveopsResourceFactory","apiHostname",function(e,n){var t=e.create({endpoint:n+"/v1/tenants/:tenantId/permissions/:id",resourceName:"TenantPermission",updateFields:[]});return t.prototype.getDisplay=function(){return this.name},t}]),angular.module("liveopsConfigPanel.shared.services").factory("TenantRole",["LiveopsResourceFactory","apiHostname","Session","cacheAddInterceptor","emitInterceptor",function(e,n,t,r,o){var i=e.create({endpoint:n+"/v1/tenants/:tenantId/roles/:id",resourceName:"TenantRole",updateFields:[{name:"name"},{name:"description",optional:!0},{name:"permissions"}],saveInterceptor:[r,o]});return i.prototype.getDisplay=function(){return this.name},i.getName=function(e){return i.cachedGet({tenantId:t.tenant.tenantId,id:e}).name},i}]),angular.module("liveopsConfigPanel.tenant.skill.mock",["liveopsConfigPanel.mock"]).service("mockSkills",function(e){return[new e({id:"skillId1",name:"skillName1",tenantId:"tenant-id",hasProficiency:!0}),new e({id:"skillId2",name:"skillName2",tenantId:"tenant-id",hasProficiency:!1}),new e({id:"skillId3",name:"skillName3",description:"Does not exist yet!",tenantId:"tenant-id",hasProficiency:!1})]}).service("mockUserSkills",function(e){return[new e({skillId:"skillId1",tenantId:"tenant-id",userId:"userId1",proficiency:0}),new e({skillId:"skillId1",tenantId:"tenant-id",userId:"userId2",proficiency:5}),new e({skillId:"skillId2",tenantId:"tenant-id",userId:"userId1",proficiency:8}),new e({skillId:"skillId3",tenantId:"tenant-id",userId:"userId2",proficiency:10})]}).service("mockSkillUsers",function(e){return[new e({userId:"userId1",proficiency:0}),new e({userId:"userId2",proficiency:5}),new e({userId:"userId1",proficiency:8}),new e({userId:"userId2",proficiency:10})]}).run(["$httpBackend","apiHostname","mockSkills","mockUserSkills","mockSkillUsers",function(e,n,t,r,o){e.when("GET",n+"/v1/tenants/tenant-id/skills").respond({result:[t[0],t[1]]}),e.when("GET",n+"/v1/tenants/tenant-id/skills/skillId1").respond({result:t[0]}),e.when("GET",n+"/v1/tenants/tenant-id/skills/skillId2").respond({result:t[1]}),e.when("GET",n+"/v1/tenants/tenant-id/users/userId1/skills").respond({result:[r[0],r[2]]}),e.when("GET",n+"/v1/tenants/tenant-id/users/userId2/skills").respond({result:[r[1]]}),e.when("GET",n+"/v1/tenants/tenant-id/skills/skillId1/users").respond({result:[o[0],o[1]]}),e.when("GET",n+"/v1/tenants/tenant-id/skills/skillId2/users").respond({result:[o[2]]}),e.when("POST",n+"/v1/tenants/tenant-id/skills").respond({result:t[2]}),e.when("POST",n+"/v1/tenants/tenant-id/users/userId1/skills").respond({result:r[2]}),e.when("DELETE",n+"/v1/tenants/tenant-id/users/userId1/skills/skillId1").respond(200),e.when("PUT",n+"/v1/tenants/tenant-id/users/userId1/skills/skillId1").respond({result:r[0]})}]),angular.module("liveopsConfigPanel.shared.services").factory("Skill",["LiveopsResourceFactory","apiHostname","cacheAddInterceptor","emitInterceptor",function(e,n,t,r){var o=e.create({endpoint:n+"/v1/tenants/:tenantId/skills/:id",resourceName:"Skill",updateFields:[{name:"name"},{name:"description",optional:!0},{name:"hasProficiency"},{name:"active",optional:!0}],saveInterceptor:[t,r],updateInterceptor:r});return o.prototype.getDisplay=function(){return this.name},o}]),angular.module("liveopsConfigPanel.shared.services").service("tenantUserTransformer",["User","TenantRole","Session",function(e,n,t){var r=function(e,n,t){e[t]=e[n],delete e[n]},o=function(e,n,t){e.$user[t?t:n]=e[n],delete e[n]},i=function(e,n){e.$user[n]=e[n]};this.transform=function(a){a.$user=new e,a.userId&&r(a,"userId","id"),o(a,"firstName"),o(a,"lastName"),o(a,"externalId"),o(a,"personalTelephone"),o(a,"platformStatus","status"),i(a,"id"),i(a,"email"),r(a,"groups","$groups"),r(a,"skills","$skills"),a.roleName?r(a,"roleName","$roleName"):a.$roleName=n.getName(a.roleId),a.tenantId=t.tenant.tenantId,a.$user.$original=angular.copy(a.$user)}}]).service("tenantUserInterceptor",["tenantUserTransformer",function(e){this.response=function(n){var t=n.resource;return e.transform(t),t}}]).service("tenantUserQueryInterceptor",["tenantUserTransformer",function(e){this.response=function(n){return angular.forEach(n.resource,function(n){e.transform(n)}),n.resource}}]),angular.module("liveopsConfigPanel.shared.services").factory("TenantUser",["LiveopsResourceFactory","apiHostname","tenantUserInterceptor","tenantUserQueryInterceptor","cacheAddInterceptor",function(e,n,t,r,o){var i=function(e){var n=angular.copy(e);return e.$original&&e.status===e.$original.status&&delete n.status,n},a=e.create({endpoint:n+"/v1/tenants/:tenantId/users/:id",resourceName:"TenantUser",updateFields:[{name:"status"},{name:"roleId"},{name:"extensions"}],putRequestTransformer:i,postRequestTransformer:i,getInterceptor:t,queryInterceptor:r,saveInterceptor:[t,o],updateInterceptor:t});a.prototype.getDisplay=function(){return this.$user?this.$user.getDisplay():void 0};var s=a.prototype.reset;return a.prototype.reset=function(){s.call(this),this.$user.reset()},a.prototype.isNew=function(){return!this.id},a}]),angular.module("liveopsConfigPanel.tenant.user.mock",["liveopsConfigPanel.mock","liveopsConfigPanel.tenant.role.mock"]).service("mockTenantUsers",function(e){return[new e({id:"userId1",status:"pending",externalId:73795,lastName:"Lowe",firstName:"Munoz",email:"munoz.lowe@hivedom.org",tenantId:"tenant-id",roleName:"roleName1",roleId:"roleId1",skills:[],groups:[]}),new e({id:"userId2",status:"accepted",externalId:80232,lastName:"Oliver",firstName:"Michael",email:"michael.oliver@ezent.io",tenantId:"tenant-id",roleName:"roleName1",roleId:"roleId1",skills:[],groups:[]}),new e({email:"test1@bluespurs.com",createdBy:"userId1",personalTelephone:null,platformStatus:"pending",firstName:"test",created:"2015-08-19T13:25:13Z",state:"offline",extension:"ca027450_4673_11e5_bded_621c6d9e2761",$skills:[],externalId:"56789",status:"invited",id:"userId100",lastName:"1",groups:[{tenantId:"tenant-id",memberId:"userId1",groupId:"groupId1",added:"2015-08-19T13:25:13Z",memberType:"user",name:"everyone",ower:"userId1",description:"everyone group"}],roleId:"roleId1"}),new e({tenantId:"tenantId",email:"test1@bluespurs.com",createdBy:"userId1",sessionReason:null,invitationExpiryDate:"2015-08-20T13:36:11Z",updated:null,created:"2015-08-19T13:36:11Z",state:"offline",extension:"41903310_4677_11e5_bded_621c6d9e2761",updatedBy:null,status:"invited",userId:"userId100",sessionStarted:"2015-08-19T13:36:11Z",roleId:"roleId1"})]}).run(["$httpBackend","apiHostname","mockTenantUsers",function(e,n,t){e.when("GET",n+"/v1/tenants/tenant-id/users/userId1").respond({result:t[0]}),e.when("GET",n+"/v1/tenants/tenant-id/users/userId2").respond({result:t[1]}),e.when("GET",n+"/v1/tenants/tenant-id/users/userId100").respond({result:t[2]}),e.when("GET",n+"/v1/tenants/tenant-id/users").respond({result:[t[0],t[1]]}),e.when("GET",n+"/v1/tenants/tenant-id/userId").respond(404),e.when("POST",n+"/v1/tenants/tenant-id/users").respond(t[3])}]),angular.module("liveopsConfigPanel.shared.services").factory("BusinessHourException",["LiveopsResourceFactory","apiHostname","emitInterceptor","cacheAddInterceptor",function(e,n,t,r){var o=e.create({endpoint:n+"/v1/tenants/:tenantId/business-hours/:businessHourId/exceptions/:id",resourceName:"BusinessHourException",updateFields:[{name:"date"},{name:"isAllDay"}],saveInterceptor:[t,r],updateInterceptor:t});return o.prototype.getDisplay=function(){return this.name},o}]),angular.module("liveopsConfigPanel.shared.services").factory("FlowDraft",["LiveopsResourceFactory","apiHostname","emitInterceptor","$http",function(e,n,t,r){var o=n+"/v1/tenants/:tenantId/flows/:flowId/drafts/:id",i=e.create({endpoint:o,resourceName:"FlowDraft",updateFields:[{name:"tenantId"},{name:"name"},{name:"description",optional:!0},{name:"flowId"},{name:"flow"},{name:"history"}],saveInterceptor:t,updateInterceptor:t});return i.prototype.getDisplay=function(){return this.name},i.prototype.validate=function(){var e=n+"/v1/tenants/"+this.tenantId+"/flows/"+this.flowId+"/drafts/"+this.id+"/validate";return r({method:"POST",url:e}).then(function(){return!0},function(e){return e})},i}]),angular.module("liveopsConfigPanel.tenant.flow.draft.mock",["liveopsConfigPanel.mock","liveopsConfigPanel.tenant.flow.mock"]).value("mockFlowDrafts",[{name:"Draft 1",version:"flowDraftId1",flowId:"flowId1",tenantId:"tenant-id",flow:"[]"},{name:"Draft 2",version:"flowDraftId2",flowId:"flowId1",tenantId:"tenant-id",flow:"[]"},{name:"Draft 3",version:"flowDraftId3",flowId:"flowId2",tenantId:"tenant-id",flow:"[]"},{name:"Draft 4",version:"flowDraftId4",flowId:"flowId3",tenantId:"tenant-id",flow:"[]"}]).run(["$httpBackend","apiHostname","mockFlows","mockFlowDrafts","Session",function(e,n,t,r,o){e.when("GET",n+"/v1/tenants/"+o.tenant.tenantId+"/flows/"+t[0].id+"/drafts/"+r[0].id).respond({result:r[0]}),e.when("GET",n+"/v1/tenants/"+o.tenant.tenantId+"/flows/"+t[0].id+"/drafts/"+r[1].id).respond({result:r[1]}),e.when("GET",n+"/v1/tenants/"+o.tenant.tenantId+"/flows/"+t[1].id+"/drafts/"+r[2].id).respond({result:r[2]}),e.when("GET",n+"/v1/tenants/"+o.tenant.tenantId+"/flows/"+t[0].id+"/drafts").respond({result:[r[0],r[1]]}),e.when("POST",n+"/v1/tenants/"+o.tenant.tenantId+"/flows/"+t[2].id+"/drafts").respond({result:r[3]})}]),angular.module("liveopsConfigPanel.shared.services").factory("FlowVersion",["LiveopsResourceFactory","apiHostname","emitInterceptor",function(e,n,t){var r=e.create({endpoint:n+"/v1/tenants/:tenantId/flows/:flowId/versions/:version",resourceName:"FlowVersion",updateFields:[{name:"tenantId"},{name:"name"},{name:"description",optional:!0},{name:"flowId"},{name:"flow"}],saveInterceptor:t,updateInterceptor:t});return r.prototype.getDisplay=function(){return this.name},r}]),angular.module("liveopsConfigPanel.tenant.flow.version.mock",["liveopsConfigPanel.mock","liveopsConfigPanel.tenant.flow.mock"]).value("mockFlowVersions",[{name:"v1",version:"flowVersionId1",flowId:"flowId1",tenantId:"tenant-id",flow:"[]"},{name:"v2",version:"flowVersionId2",flowId:"flowId1",tenantId:"tenant-id",flow:"[]"},{name:"v3",version:"flowVersionId3",flowId:"flowId2",tenantId:"tenant-id",flow:"[]"},{name:"v4",version:"flowVersionId4",flowId:"flowId3",tenantId:"tenant-id",flow:"[]"}]).run(["$httpBackend","apiHostname","mockFlows","mockFlowVersions","Session",function(e,n,t,r,o){e.when("GET",n+"/v1/tenants/"+o.tenant.tenantId+"/flows/"+t[0].id+"/versions/"+r[0].id).respond({result:r[0]}),e.when("GET",n+"/v1/tenants/"+o.tenant.tenantId+"/flows/"+t[0].id+"/versions/"+r[1].id).respond({result:r[1]}),e.when("GET",n+"/v1/tenants/"+o.tenant.tenantId+"/flows/"+t[1].id+"/versions/"+r[2].id).respond({result:r[2]}),e.when("GET",n+"/v1/tenants/"+o.tenant.tenantId+"/flows/"+t[0].id+"/versions").respond({result:[r[0],r[1]]}),e.when("POST",n+"/v1/tenants/"+o.tenant.tenantId+"/flows/"+t[2].id+"/versions").respond({result:r[3]})}]),angular.module("liveopsConfigPanel.tenant.queue.version.mock",["liveopsConfigPanel.mock"]).service("mockQueueVersions",["QueueVersion",function(e){return[new e({version:"qv1",tenantId:"tenant-id",queueId:"queueId1"}),new e({version:"qv2",tenantId:"tenant-id",queueId:"queueId2"}),new e({version:"qv3",tenantId:"tenant-id",queueId:"queueId2"})]}]).run(["$httpBackend","apiHostname","mockQueueVersions","Session",function(e,n,t,r){e.when("GET",n+"/v1/tenants/"+r.tenant.tenantId+"/queues/queueId1/versions").respond({result:[t[0]]}),e.when("GET",n+"/v1/tenants/"+r.tenant.tenantId+"/queues/queueId2/versions").respond({result:[t[1],t[2]]})}]),angular.module("liveopsConfigPanel.shared.services").factory("QueueVersion",["LiveopsResourceFactory","apiHostname","emitInterceptor","cacheAddInterceptor",function(e,n,t,r){var o=e.create({endpoint:n+"/v1/tenants/:tenantId/queues/:queueId/versions/:id",resourceName:"QueueVersion",updateFields:[{name:"name",optional:!0},{name:"description",optional:!0},{name:"query",optional:!0},{name:"minPriority",optional:!0},{name:"maxPriority",optional:!0},{name:"priorityValue",optional:!0},{name:"priorityRate",optional:!0},{name:"priorityUnit",optional:!0}],saveInterceptor:[t,r],updateInterceptor:t});return o.prototype.getDisplay=function(){return this.name},o.prototype.cacheKey=function(){return"QueueVersion"+this.queueId},o}]),angular.module("liveopsConfigPanel.shared.services").factory("TenantGroupUsers",["LiveopsResourceFactory","apiHostname",function(e,n){return e.create({endpoint:n+"/v1/tenants/:tenantId/groups/:groupId/users/:memberId",resourceName:"TenantGroupUser",requestUrlFields:{tenantId:"@tenantId",groupId:"@groupId",memberId:"@memberId"}})}]),angular.module("liveopsConfigPanel.shared.services").factory("TenantUserGroups",["LiveopsResourceFactory","apiHostname",function(e,n){return e.create({endpoint:n+"/v1/tenants/:tenantId/users/:memberId/groups",resourceName:"TenantUserGroup",requestUrlFields:{tenantId:"@tenantId",memberId:"@memberId"}})}]),angular.module("liveopsConfigPanel.tenant.user.group.mock",["liveopsConfigPanel.mock"]).service("mockGroupUsers",function(e){return[new e({groupId:"groupId1",memberId:"userId1",tenantId:"tenant-id"}),new e({groupId:"groupId2",memberId:"userId1",tenantId:"tenant-id"}),new e({groupId:"groupId1",memberId:"userId2",tenantId:"tenant-id"})]}).service("mockUserGroups",function(e){return[new e({groupId:"groupId1",memberId:"userId1",tenantId:"tenant-id"}),new e({groupId:"groupId2",memberId:"userId1",tenantId:"tenant-id"}),new e({groupId:"groupId1",memberId:"userId2",tenantId:"tenant-id"})]}).run(["$httpBackend","apiHostname","mockGroups","mockGroupUsers","mockUserGroups","Session",function(e,n,t,r,o,i){i.tenant.tenantId="tenant-id",e.when("POST",n+"/v1/tenants/tenant-id/groups/groupId1/users",{userId:"userId1"}).respond(200,o[1]),e.when("POST",n+"/v1/tenants/tenant-id/groups/groupId2/users",{userId:"userId1"}).respond(200,o[1]),e.when("DELETE",n+"/v1/tenants/tenant-id/groups/groupId1/users/userId1").respond(200),e.when("DELETE",n+"/v1/tenants/tenant-id/groups/groupId1/users/userId2").respond(200),e.when("GET",n+"/v1/tenants/tenant-id/users/userId1/groups").respond({result:[o[0],o[1]]}),e.when("GET",n+"/v1/tenants/tenant-id/users/userId2/groups").respond({result:[o[2]]}),e.when("GET",n+"/v1/tenants/tenant-id/groups/groupId1/users").respond({result:[r[0],r[2]]}),e.when("GET",n+"/v1/tenants/tenant-id/groups/groupId2/users").respond({result:[r[1]]}),e.when("GET",n+"/v1/tenants/tenant-id/groups/groupId3/users").respond({result:[]})}]),angular.module("liveopsConfigPanel.shared.services").service("removeDefaultProficiencyInterceptor",["queryCache","Skill","Session","filterFilter",function(e,n,t,r){this.response=function(e){var o=e.resource.skillId;return n.cachedQuery({tenantId:t.tenant.tenantId}).$promise.then(function(n){var t=r(n,{id:o},!0);t.length>0&&(t[0].hasProficiency||delete e.resource.proficiency)}),e.resource}}]),angular.module("liveopsConfigPanel.shared.services").service("setSkillNameInterceptor",["queryCache","Skill","Session","filterFilter",function(e,n,t,r){this.response=function(e){var o=e.resource.skillId;return n.cachedQuery({tenantId:t.tenant.tenantId}).$promise.then(function(n){var t=r(n,{id:o},!0);t.length>0&&(e.resource.name=t[0].name)}),e.resource}}]),angular.module("liveopsConfigPanel.shared.services").factory("TenantSkillUser",["LiveopsResourceFactory","apiHostname",function(e,n){return e.create({endpoint:n+"/v1/tenants/:tenantId/skills/:skillId/users/:userId",resourceName:"TenantSkillUser"})}]),angular.module("liveopsConfigPanel.shared.services").factory("TenantUserSkill",["LiveopsResourceFactory","apiHostname","emitInterceptor","cacheAddInterceptor","userSkillCacheRemoveInterceptor","setSkillNameInterceptor","removeDefaultProficiencyInterceptor",function(e,n,t,r,o,i,a){var s=e.create({endpoint:n+"/v1/tenants/:tenantId/users/:userId/skills/:skillId",resourceName:"TenantUserSkill",updateFields:[{name:"proficiency"}],requestUrlFields:{tenantId:"@tenantId",userId:"@userId",skillId:"@id"},saveInterceptor:[t,i,a,r],updateInterceptor:[t,i],deleteInterceptor:o});return s.prototype.cacheKey=function(){return"TenantUserSkill"+this.userId},s}]),angular.module("liveopsConfigPanel.shared.services").service("userSkillCacheRemoveInterceptor",["queryCache","filterFilter",function(e,n){this.response=function(t){if(angular.isDefined(t.resource.cacheKey())){var r=t.resource.cacheKey();if(e.get(r)){var o=n(e.get(r),{skillId:t.resource.skillId},!0);o.length>0&&e.get(r).removeItem(o[0])}}return t.resource}}]);