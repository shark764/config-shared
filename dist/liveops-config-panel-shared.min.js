"use strict";!function(e){e.module("liveopsConfigPanel.shared.config",[]).value("liveopsConfigPanel.shared.config",{debug:!0}),e.module("liveopsConfigPanel.shared.directives",["liveopsConfigPanel.shared.services","liveopsConfigPanel.shared.filters"]),e.module("liveopsConfigPanel.shared.filters",[]),e.module("liveopsConfigPanel.shared.services",["toastr","ngLodash","ngResource","pascalprecht.translate","liveopsConfigPanel.shared.config"]),e.module("liveopsConfigPanel.shared",["liveopsConfigPanel.shared.config","liveopsConfigPanel.shared.directives","liveopsConfigPanel.shared.filters","liveopsConfigPanel.shared.services"])}(angular),angular.module("liveopsConfigPanel.shared.config").constant("apiHostname","http://localhost:9080").constant("BIRST_URL","http://dev-birst.liveopslabs.com").constant("SSO_PASSWORD","JO4IIiv0vuzyhoYoyWpbip0QquoCQyGh").constant("SPACE_ID","2846b565-23f8-4032-b563-21f8b7a01cc5").constant("helpDocsHostname","http://beta-help-docs.liveopslabs.com"),angular.module("liveopsConfigPanel.shared.config").constant("jsedn",window.jsedn).constant("preferenceKey","LIVEOPS-PREFERENCE-KEY").constant("sessionKey","LIVEOPS-SESSION-KEY").constant("uuidcacheKey","LIVEOPS-CACHE-KEY").factory("userStatuses",function(){return function(){return[{display:"Disabled",value:"disabled"},{display:"Enabled",value:"enabled"},{display:"Pending",value:"pending"}]}}).factory("statuses",function(){return function(){return[{display:"Disabled",value:!1},{display:"Enabled",value:!0}]}}).factory("ynStatuses",function(){return function(){return[{display:"No",value:!1},{display:"Yes",value:!0}]}}).factory("tenantStatuses",function(){return function(){return[{display:"Disabled",value:"disabled"},{display:"Expired Invitation",value:"expired"},{display:"Pending Invitation",value:"pending"},{display:"Accepted",value:"accepted"},{display:"Pending Acceptance",value:"invited"},{display:"Removed",value:"removed"}]}}).constant("userStates",[{display:"Busy",value:"busy"},{display:"Ready",value:"ready"},{display:"Not Ready",value:"not-ready"},{display:"Allocated",value:"allocated"},{display:"Offline",value:"offline"}]).constant("userRoles",[{value:"admin",display:"Admin"},{value:"user",display:"User"},{value:"other",display:"Other"}]),angular.module("liveopsConfigPanel.shared.filters").filter("hasPermission",["UserPermissions",function(e){return function(n){return angular.isArray(n)||(n=[n]),e.hasPermissionInList(n)}}]),angular.module("liveopsConfigPanel.shared.services").service("Alert",["toastr","$window",function(e,n){this.confirm=function(e,t,r){n.confirm(e)?t&&t():r&&r()},this.warning=function(){e.warning.apply(this,arguments)},this.success=function(){e.success.apply(this,arguments)},this.error=function(){e.error.apply(this,arguments)},this.info=function(){e.info.apply(this,arguments)}}]),angular.module("liveopsConfigPanel.mock",[]).value("mockRegions",[{id:"regionId1",description:"US East (N. Virginia)",name:"us-east-1"}]).value("mockLogin",{userId:"userId1",username:"username",platformPermissions:[],tenants:[]}).run(function(e,n,t,r,s){s.token="token1",s.tenant={tenantId:"tenant-id"},s.user={id:"userId1"},s.activeRegionId=t[0].id,e.when("GET",n+"/v1/regions").respond({result:t}),e.when("POST",n+"/v1/login").respond({result:r})}),angular.module("liveopsConfigPanel.shared.services").service("DirtyForms",["Alert","$translate",function(e,n){var t=this;this.forms=[],this.hasDirty=function(){var e=!1;return angular.forEach(t.forms,function(n){n.$dirty&&(e=!0)}),e},this.registerForm=function(e){t.forms.push(e)},this.removeForm=function(e){t.forms.removeItem(e)},this.confirmIfDirty=function(r){t.hasDirty()?e.confirm(n.instant("unsavedchanges.nav.warning"),r,angular.noop):r()}}]),function(){var e=function(e,n,t){return{seed:function(r,s){var o,i,a,l,u,c,d,p,f,m="10f15d80-0052-11e5-b68b-fb65b1fe22e1";return e.get("http://localhost:9080/v1/regions").then(function(n){return o=n.data.result[0].id,console.log("-- TITAN_REGION_ID --",o),e.post("http://localhost:9080/v1/login",{email:"titan@liveops.com",password:"gKVnfF9wrs6XPSYs"})}).then(function(n){return i=n.data.result.user.id,console.log("-- TITAN_ADMIN_ID --",i),e.post("http://localhost:9080/v1/users",{createdBy:i,email:r,password:s,firstName:"Test",lastName:"User",status:"enabled",externalId:"00000000-0000-0000-000000000000"})}).then(function(n){return a=n.data.result.id,l=n.data.result.email,console.log("-- CREATED_USER_ID --",a),console.log("-- CREATED_USER_EMAIL --",l),e.post("http://localhost:9080/v1/tenants",{adminUserId:a,createdBy:i,description:"This is a test tenant created by the seed service.",name:"Test Tenant",regionId:o})}).then(function(n){return u=n.data.result.id,console.log("-- CREATED TENANT ID --",u),e.post("http://localhost:9080/v1/tenants/"+u+"/invites",{roleId:m,email:l})}).then(function(o){return c=o.data.result.invitation.invitationToken,console.log("-- CREATED_INVITE_TOKEN --",c),console.log("-- LOG IN AS NEW USER --"),t(function(){n.login(r,s).then(function(){return e.get("http://localhost:9080/v1/tenants/"+u+"/invites/"+a+"/accept?token="+c)}).then(function(n){return f=n.data.result,console.log("-- ACCEPTED_INVITE_STATUS --",f),e.post("http://localhost:9080/v1/tenants/"+u+"/flows",{createdBy:a,description:"Test flow description.",name:"Test flow",tenantId:u,type:"customer"})}).then(function(n){return d=n.data.result.id,console.log("-- CREATED_FLOW_ID --",d),e.post("http://localhost:9080/v1/tenants/"+u+"/flows/"+d+"/versions",{createdBy:a,description:"Initial Version.",name:"v1",flowId:d,tenantId:u,flow:"[]"})}).then(function(e){p=e.data.result.version,console.log("-- CREATED VERSION ID --",p),console.log('\n\n Done seeding DB with all necessary data to access the flows screen. Log in as the user "'+r+'" with the password "'+s+'" and access the flows screen and go to town :)')})},5e3),n.login(r,s)})}}};angular.module("liveopsConfigPanel.shared.services").service("flowSetup",e)}(),Array.prototype.removeItem=function(e){var n=this.indexOf(e);n>-1&&this.splice(n,1)},Array.prototype.clear=function(){this.splice(0,this.length)},Array.prototype.shuffle=function(){var e,n,t=this.length;if(0===t)return this;for(;--t;)e=Math.floor(Math.random()*(t+1)),n=this[t],this[t]=this[e],this[e]=n;return this},String.prototype.insert=function(e,n){return e>0?this.substring(0,e)+n+this.substring(e,this.length):n+this},String.prototype.capitalize=function(){return this.charAt(0).toUpperCase()+this.slice(1)},String.prototype.contains||(String.prototype.contains=function(e){return this.indexOf(e)>-1}),angular.module("liveopsConfigPanel.shared.directives").directive("auditText",["$filter","TenantUser","Session",function(e,n,t){return{restrict:"AE",scope:{translation:"@",userId:"=",date:"="},template:"{{get()}}",link:function(r){r.get=function(){if(!r.userId)return e("translate")(r.translation,{date:e("date")(r.date,"medium")});var s=n.cachedGet({id:r.userId,tenantId:t.tenant.tenantId},"AuditTextUsers");return s.$resolved&&(r.text=e("translate")(r.translation,{displayName:s.getDisplay(),date:e("date")(r.date,"medium")})),r.text}}}}]),angular.module("liveopsConfigPanel.shared.directives").directive("autocomplete",["filterFilter","$timeout",function(e,n){return{restrict:"E",scope:{items:"=",nameField:"@",onSelect:"&",prefill:"=",isRequired:"=",placeholder:"@",hover:"=",keepExpanded:"=",onEnter:"&"},templateUrl:"liveops-config-panel-shared/directives/autocomplete/autocomplete.html",link:function(t){t.currentText=t.prefill||"",t.$watch("currentText",function(){var r;if(t.nameField){var s=t.filterCriteria={};s[t.nameField]=t.currentText,r=e(t.items,s,!0)}n(function(){t.onSelect({currentText:t.currentText})})}),t.select=function(e){t.hovering=!1,t.currentText=e.content},t.onBlur=function(){t.keepExpanded||(t.showSuggestions=!1)}}}}]),angular.module("liveopsConfigPanel.shared.directives").service("BulkAction",["$q",function(e){var n=function(){this.checked=!1};return n.prototype.reset=function(){this.checked=!1},n.prototype.apply=function(){},n.prototype.execute=function(n){var t=[],r=this;return angular.forEach(n,function(n){t.push(e.when(r.apply(n)))}),e.all(t)},n.prototype.canExecute=function(){return!0},n}]),angular.module("liveopsConfigPanel.shared.directives").directive("bulkActionExecutor",["$q","Alert","Modal","$translate","DirtyForms","$filter",function(e,n,t,r,s,o){return{restrict:"AE",replace:!0,scope:{items:"=",bulkActions:"=",showBulkActions:"=",dropOrderBy:"@",confirmMessageKey:"@"},transclude:!0,templateUrl:"liveops-config-panel-shared/directives/bulkActionExecutor/bulkActionExecutor.html",link:function(i){i.confirmMessageKey||(i.confirmMessageKey="bulkActions.confirm.message"),i.checkedItems=[],i.confirmExecute=function(){t.showConfirm({title:r.instant("bulkActions.confirm.title"),message:r.instant(i.confirmMessageKey,{numItems:i.selectedItems().length}),okCallback:i.execute})},i.closeBulk=function(){s.confirmIfDirty(function(){i.$emit("details:panel:close")})},i.execute=function(){var t=i.getSelectedBulkActions(i.bulkActions),s=[];i.bulkActionForm.$setUntouched(),i.bulkActionForm.$setPristine(),angular.forEach(t,function(n){if(n.canExecute()){var t=i.getSelectedBulkActions(i.items);s.push(e.when(n.execute(t)))}});var o=e.all(s).then(function(){n.success(r.instant("bulkAction.success")),i.resetForm()});return o},i.canExecute=function(){var e=i.getSelectedBulkActions(i.bulkActions),n=!!e.length;return 0===i.selectedItems().length?!1:(angular.forEach(e,function(e){n=n&&e.canExecute()}),n)},i.getSelectedBulkActions=function(e){var n=[];return angular.forEach(e,function(e){e.checked&&n.push(e)}),n},i.selectedItems=function(){if(i.checkedItems.clear(),angular.forEach(i.items,function(e){e.checked&&i.checkedItems.push(e)}),i.dropOrderBy){var e=o("orderBy")(i.checkedItems,i.dropOrderBy);i.checkedItems.clear(),i.checkedItems.push.apply(i.checkedItems,e)}return i.checkedItems},i.cancel=function(){s.confirmIfDirty(function(){i.bulkActionForm.$dirty?i.resetForm():i.closeBulk()})},i.resetForm=function(){i.bulkActionForm.$setUntouched(),i.bulkActionForm.$setPristine(),angular.forEach(i.bulkActions,function(e){e.reset()})},i.$watch("showBulkActions",function(e){e||i.resetForm()})}}}]),angular.module("liveopsConfigPanel.shared.directives.bulkAction.mock",["liveopsConfigPanel.mock"]).service("mockBulkActions",function(e){var n=[new e];return n[0].checked=!0,spyOn(n[0],"execute"),spyOn(n[0],"canExecute").and.returnValue(!0),n.push(new e),n[1].checked=!0,spyOn(n[1],"execute"),spyOn(n[1],"canExecute").and.returnValue(!1),n}),angular.module("liveopsConfigPanel.shared.directives").directive("compiledInclude",["$compile","$templateCache","$http","$q",function(e,n,t,r){return{restrict:"A",priority:400,compile:function(){return function(s,o,i){var a=i.compiledInclude,l=n.get(a);l||(l=t.get(a,{cache:n}).then(function(e){return n.put(a,e.data),e.data})),r.when(l).then(function(n){o.html(n),e(o.contents())(s)})}}}}]),angular.module("liveopsConfigPanel.shared.directives").directive("loCancel",["$q",function(e){return{restrict:"A",require:["^loFormCancel"],link:function(n,t,r,s){r.event=angular.isDefined(r.event)?r.event:"click",t.bind(r.event,function(){var t=e.when(n.$eval(r.loCancel));t.then(function(){return s[0].cancel()}),n.$apply()})}}}]),angular.module("liveopsConfigPanel.shared.directives").directive("loFormAlert",["$parse","Alert",function(e,n){return{restrict:"A",require:["loFormSubmit"],controller:function(){this.alertSuccess=function(e){var t=e.updated?"updated":"saved";n.success("Record "+t)},this.alertFailure=function(e){var t=e.updated?"update":"save";n.error("Record failed to "+t)}},link:function(e,n){e.$on("form:submit:success",function(e,t){var r=n.data("$loFormAlertController");r.alertSuccess(t)}),e.$on("form:submit:failure",function(e,t){var r=n.data("$loFormAlertController");r.alertFailure(t)})}}}]),angular.module("liveopsConfigPanel.shared.directives").directive("loFormCancel",["$parse","DirtyForms","$timeout","$rootScope",function(e,n,t,r){return{restrict:"A",require:["ngResource","form","^loDetailsPanel"],controller:function(s){var o=this;this.resetForm=function(){angular.forEach(o.formController,function(e,n){if(e&&e.hasOwnProperty("$modelValue")&&e.$invalid){var t=e.$modelValue;null===t&&(t=void 0),o.formController[n].$setViewValue(t),o.formController[n].$rollbackViewValue()}}),o.formController.$setPristine(),o.formController.$setUntouched()},this.cancel=function(){var i=e(this.ngResource)(s);i.isNew()||!this.formController.$dirty?this.loDetailsPanelController.close():n.confirmIfDirty(function(){r.$broadcast("cancel:resource:"+i.resourceName),i.reset(),t(function(){o.resetForm(o.formController)})})}},link:function(n,t,r,s){n.$watch(r.ngResource,function(s,o){o&&o.reset();var i=e(r.name)(n),a=t.data("$loFormCancelController");a.resetForm(i)});var o=t.data("$loFormCancelController");o.ngResource=r.ngResource,o.formController=s[1],o.loDetailsPanelController=s[2]}}}]),angular.module("liveopsConfigPanel.shared.directives").directive("loFormReset",[function(){return{restrict:"A",require:"form",controller:function(){var e=this;this.resetForm=function(){angular.forEach(e.formController,function(n,t){if(n&&n.hasOwnProperty("$modelValue")&&n.$invalid){var r=n.$modelValue;null===r&&(r=void 0),e.formController[t].$setViewValue(r),e.formController[t].$rollbackViewValue()}}),e.formController.$setPristine(),e.formController.$setUntouched()}},link:function(e,n,t,r){var s=n.data("$loFormResetController");s.formController=r}}}]),angular.module("liveopsConfigPanel.shared.directives").directive("loFormSubmit",["$parse",function(e){return{restrict:"A",require:"form",controller:function(n){var t=this;t.errorInputWatchesUnbinds={},this.populateApiErrors=function(r){return e("data.error")(r)&&angular.forEach(r.data.error.attribute,function(e,r){angular.isDefined(t.formController[r])&&(t.formController[r].$setValidity("api",!1),t.formController[r].$error={api:e},t.formController[r].$setTouched(),t.formController[r].$setPristine(),t.errorInputWatchesUnbinds[r]=n.$watch(function(){return t.formController[r].$dirty},function(e){e&&(t.formController[r].$setValidity("api",!0),t.errorInputWatchesUnbinds[r](),delete t.errorInputWatchesUnbinds[r])}))}),r}},link:function(e,n,t,r){var s=n.data("$loFormSubmitController");s.formController=r}}}]),angular.module("liveopsConfigPanel.shared.directives").directive("loSubmit",["$q","$parse",function(e,n){return{restrict:"A",require:["^loFormSubmit","?^loFormCancel","?^loFormAlert","?^loFormReset"],link:function(t,r,s,o){s.event=angular.isDefined(s.event)?s.event:"click";var i=o[0],a=o[1],l=o[2],u=o[3];r.bind(s.event,function(){var r=n(s.ngDisabled)(t);if(!r){var o=e.when(t.$eval(s.loSubmit));o=o.then(function(e){return a?a.resetForm():u&&u.resetForm(),e},function(n){var t=e.defer();return i.populateApiErrors(n),t.reject(n),t.promise}),o=o.then(function(e){l.alertSuccess(e)},function(e){l.alertFailure(e.config.data)}),t.$apply()}})}}}]),angular.module("liveopsConfigPanel.shared.directives").directive("ngResource",[function(){return{restrict:"A",controller:function(){}}}]),angular.module("liveopsConfigPanel.shared.filters").filter("hasPermission",["UserPermissions",function(e){return function(n){return angular.isArray(n)||(n=[n]),e.hasPermissionInList(n)}}]),angular.module("liveopsConfigPanel.shared.filters").filter("keysCount",[function(){return function(e){return Object.keys(e).length}}]),angular.module("liveopsConfigPanel.shared.filters").filter("objectNegation",function(){return function(e,n,t,r){var s=[];return angular.forEach(e,function(e){for(var o=!0,i=0;i<t.length;i++){var a=t[i];if(e[n]===a[r]){o=!1;break}}o&&s.push(e)}),s}}),angular.module("liveopsConfigPanel.shared.filters").filter("matchesField",["$filter",function(e){return function(n,t,r){var s=function(n,t,r){if(!(angular.isUndefined(n)||angular.isUndefined(t)||""===t||angular.isUndefined(r))){var o=t.indexOf(":");if(o>-1){var i=t.substring(0,o),a=t.substring(o+1);return s(n[i],a,r)?n:void 0}if(angular.isArray(n)){for(var l=0;l<n.length;l++)if(n[l][t]===r)return n}else if(e("parse")(n,t)===r)return n}};return s(n,t,r)}}]),angular.module("liveopsConfigPanel.shared.filters").filter("invoke",[function(){return function(e,n){return angular.isFunction(e)?e.call(n):e}}]),angular.module("liveopsConfigPanel.shared.filters").filter("parse",["$parse",function(e){return function(n,t){return e(t)(n)}}]),angular.module("liveopsConfigPanel.shared.filters").filter("search",["$parse",function(e){return function(n,t,r){function s(e){return e.replace(/([.+?^=!:${}()|\[\]\/\\])/g,"\\$1"),e.replace(/([*])/g,".*")}if(!t||!r)return n;var o=function(n,t){var r=[],s=e(n.path),i=s(t);return"string"==typeof i?r=[i]:"object"==typeof i&&angular.forEach(s(t),function(e){r="inner"in n?r.concat(o(n.inner,e)):[e]}),r},i=[];return angular.forEach(n,function(n){var a=new RegExp(s(r),"i"),l="";angular.forEach(t,function(t){"string"==typeof t?l+=e(t)(n)+" ":"object"==typeof t&&(l+=o(t,n).join(" ")+" ")}),a.test(l)&&i.push(n)}),i}}]),angular.module("liveopsConfigPanel.shared.filters").filter("selectedOptions",["$filter",function(e){return function(n,t){var r=[],s=e("invoke")(t.options);return angular.forEach(n,function(n){var o=!1;angular.forEach(s,function(s){var i=e("invoke")(s.value,s);!o&&s.checked&&e("matchesField")(n,t.name,i)&&(r.push(n),o=!0)})}),r}}]),angular.module("liveopsConfigPanel.shared.filters").filter("selectedTableOptions",["$parse","$filter",function(e,n){return function(t,r){var s=[];if(angular.isUndefined(t))return s;for(var o=!0,i=0;i<t.length;i++){for(var a=t[i],l=!0,u=0;u<r.length;u++){var c=!0,d=r[u];if(e("header.options")(d)){for(var p=d.lookup?d.lookup:d.name,f=n("invoke")(d.header.options),m=0;m<f.length;m++){var h=f[m];if(o=o&&!h.checked,h.checked){var v=e(d.header.valuePath?d.header.valuePath:"value"),g=n("invoke")(v(h),h);if(n("matchesField")(a,p,g)){c=!0;break}c=!1}}l=l&&c}}l&&s.push(a)}return o?t:s}}]),angular.module("liveopsConfigPanel.shared.services").service("Alert",["toastr","$window",function(e,n){this.confirm=function(e,t,r){n.confirm(e)?t&&t():r&&r()},this.warning=function(){e.warning.apply(this,arguments)},this.success=function(){e.success.apply(this,arguments)},this.error=function(){e.error.apply(this,arguments)},this.info=function(){e.info.apply(this,arguments)}}]),angular.module("liveopsConfigPanel.shared.services").service("Session",["$rootScope","sessionKey","preferenceKey","$translate","$filter",function(e,n,t,r,s){var o=this;this.userSessionKey=n,this.userPreferenceKey=t,this.token=null,this.user=null,this.lang=null,this.tenants=null,this.tenant=null,this.activeRegionId=null,this.columnPreferences={},this.platformPermissions=null,this.set=function(e,n,t,r){this.token=t,this.setUser(e),this.setTenants(n),this.setPlatformPermissions(r),this.flush()},this.setTenants=function(e){if(this.tenants=e&&e.length>0?e:[{tenantId:"",name:r.instant("session.tenants.none")}],this.tenant){var n=s("filter")(this.tenants,{tenantId:this.tenant.tenantId});this.tenant=n.length>0?n[0]:this.tenants[0]}else this.tenant=this.tenants[0];this.flush()},this.setUser=function(e){this.user={id:e.id,displayName:e.getDisplay(),email:e.email},this.flush()},this.setToken=function(e){this.token=e,this.flush()},this.setPlatformPermissions=function(e){this.platformPermissions=e,this.flush()},this.setColumnPreferences=function(e){this.columnPreferences=e,this.flush()},this.destroy=function(){this.token=null,this.user=null,this.tenants=null,this.platformPermissions=null,localStorage.removeItem(this.userSessionKey)},this.setTenant=function(e){o.tenant={tenantId:e.tenantId,tenantName:e.tenantName,tenantPermissions:e.tenantPermissions},o.flush()},this.destroyAll=function(){this.destroy(),this.activeRegionId=null,this.lang="en",this.tenant=null,localStorage.removeItem(this.userPreferenceKey)},this.restore=function(){angular.extend(this,JSON.parse(localStorage.getItem(this.userSessionKey))),angular.extend(this,JSON.parse(localStorage.getItem(this.userPreferenceKey)))},this.isAuthenticated=function(){return this.token?this.token.indexOf("Token")<0:!1},this.flush=function(){localStorage.setItem(o.userSessionKey,JSON.stringify({token:o.token,user:o.user,tenants:o.tenants,platformPermissions:o.platformPermissions})),localStorage.setItem(o.userPreferenceKey,JSON.stringify({lang:o.lang,activeRegionId:o.activeRegionId,tenant:o.tenant,columnPreferences:o.columnPreferences}))},this.restore()}]),angular.module("liveopsConfigPanel.shared.services").service("cacheAddInterceptor",["queryCache",function(e){this.response=function(n){var t=Object.getPrototypeOf(n.resource),r=n.resource.cacheKey?n.resource.cacheKey():t.resourceName;return e.get(r)||e.put(r,[]),e.get(r).push(n.resource),n.resource}}]),angular.module("liveopsConfigPanel.shared.services").service("cacheRemoveInterceptor",["queryCache",function(e){this.response=function(n){var t=Object.getPrototypeOf(n.resource),r=n.resource.cacheKey?n.resource.cacheKey():t.resourceName;return e.get(r)&&e.get(r).removeItem(n.resource),n.resource}}]),angular.module("liveopsConfigPanel.shared.services").service("emitInterceptor",["$rootScope","$q","$location","apiHostname",function(e,n,t,r){this.response=function(n){var t=n.config.url.replace(r+"/v1",""),s=t.replace(/\//g,":"),o=Object.getPrototypeOf(n.resource);return 201===n.status?(e.$broadcast("created:resource:"+o.resourceName,n.resource),e.$broadcast("created:resource"+s,n.resource)):200===n.status&&(s=s.replace(/:[-\w]+$/,""),e.$broadcast("updated:resource:"+o.resourceName,n.resource),e.$broadcast("updated:resource"+s,n.resource)),n.resource}}]),angular.module("liveopsConfigPanel.shared.services").factory("LiveopsResourceFactory",["$http","$resource","$q","queryCache","lodash",function(e,n,t,r,s){function o(e){return e.result?e.result:e}function i(e,n){return s.startsWith(e,"$")?void 0:n}function a(e){if(angular.isArray(e)){var n=function(n){return angular.forEach(e,function(e){e.response(n)}),n.resource},t={response:n};return t}return e}function l(e,n){return s.startsWith(e,"$")?void 0:n}return{create:function(t){function u(e){var n=angular.copy(e);return angular.forEach(n,function(e,r){var o=s.findIndex(t.updateFields,{name:r});(0>o||null===e&&t.updateFields[o].optional)&&delete n[r]}),n}function c(e){var n=u(e);return JSON.stringify(n,l)}function d(e){return JSON.stringify(e,i)}t.requestUrlFields=angular.isDefined(t.requestUrlFields)?t.requestUrlFields:{id:"@id",tenantId:"@tenantId",groupId:"@groupId",flowId:"@flowId",queueId:"@queueId",userId:"@userId",memberId:"@memberId"};var p=Array.prototype.concat(e.defaults.transformResponse,o),f=t.getRequestTransformer,m=t.getResponseTransformer?Array.prototype.concat(t.getResponseTransformer,p):p,h=t.queryRequestTransformer,v=t.queryResponseTransformer?Array.prototype.concat(t.queryResponseTransformer,p):p,g=t.putRequestTransformer?Array.prototype.concat(t.putRequestTransformer,c):c,I=t.putResponseTransformer?Array.prototype.concat(t.putRequestTransformer,p):p,y=t.postRequestTransformer?Array.prototype.concat(t.postRequestTransformer,d):d,k=t.postResponseTransformer?Array.prototype.concat(t.postResponseTransformer,p):p,P=t.deleteRequestTransformer,$=t.deleteResponseTransformer?Array.prototype.concat(t.deleteResponseTransformer,p):p,w={"Content-Type":"application/json"},C=n(t.endpoint,t.requestUrlFields,{query:{method:"GET",isArray:!0,headers:w,transformRequest:h,transformResponse:v,interceptor:a(t.queryInterceptor)},get:{method:"GET",headers:w,transformRequest:f,transformResponse:m,interceptor:a(t.getInterceptor)},update:{method:"PUT",headers:w,transformRequest:g,transformResponse:I,interceptor:a(t.updateInterceptor)},save:{method:"POST",headers:w,transformRequest:y,transformResponse:k,interceptor:a(t.saveInterceptor)},"delete":{method:"DELETE",headers:w,transformRequest:P,transformResponse:$,interceptor:a(t.saveInterceptor)}});C.prototype.resourceName=t.resourceName,C.prototype.$$backupSudoProperties=function(){var e={};return angular.forEach(this,function(n,t){t.match(/^\$[^$].*/g)&&!angular.isFunction(n)&&["$original","$busy","$resolved"].indexOf(t)<0&&(e[t]=n)}),e},C.prototype.$$restoreSudoProperties=function(e,n){angular.forEach(n,function(n,t){e[t]?angular.isObject(n)&&angular.extend(e[t],n):e[t]=n})};var T=C.get;C.get=function(e,n,t){var r=T.call(this,e,n,t);return r.$promise.then(function(e){return e.$original=angular.copy(e),e}),r};var E=C.query;C.query=function(e,n,t){var r=E.call(this,e,n,t);return r.$promise.then(function(e){return angular.forEach(e,function(e){e.$original=angular.copy(e)}),e}),r};var S=C.prototype.$save;C.prototype.$save=function(e,n,t){var r=S.call(this,e,n,t);return r.then(function(e){return e.$original=angular.copy(e),e}),r};var b=C.prototype.$update;return C.prototype.$update=function(e,n,t){var r=b.call(this,e,n,t);return r.then(function(e){return e.$original=angular.copy(e),e}),r},C.cachedGet=function(e,n,t){var o=n?n:this.prototype.resourceName,i=r.get(o);(!i||t)&&(r.put(o,[]),i=r.get(o));var a=s.find(i,e);if(!a){a=this.get(e);for(var l in e)a[l]=e[l];i.push(a)}return a},C.cachedQuery=function(e,n,t){var s=n?n:this.prototype.resourceName;if(!r.get(s)||t){var o=this.query(e);return r.put(s,o),o}return r.get(s)},C.prototype.save=function(e,n,t){var r=this,s=this.isNew()?this.$save:this.$update;r.$busy=!0;var o=this.$$backupSudoProperties();return s.call(r,e,n,t).then(function(e){return r.$original=angular.copy(e),r.$original&&r.$original.$original&&delete r.$original.$original,r.$$restoreSudoProperties(e,o),e})["finally"](function(){r.$busy=!1})},C.prototype.reset=function(){for(var e in this.$original)e.match(/^\$.*/g)||angular.isFunction(this.$original[e])||(this[e]=angular.copy(this.$original[e]))},C.prototype.getDisplay=function(){return this.toString()},C.prototype.isNew=function(){return!(this.hasOwnProperty("created")||angular.isDefined(this.id))},C.prototype.$busy=!1,C}}}]),angular.module("liveopsConfigPanel.shared.services").factory("queryCache",["$cacheFactory",function(e){return e("queryCache")}]),angular.module("liveopsConfigPanel.shared.services").service("Modal",["$document","$rootScope","$compile","$q",function(e,n,t,r){var s=this;this.showConfirm=function(o){var i={title:"",message:"",okCallback:angular.noop,cancelCallback:angular.noop},a=r.defer(),l=angular.extend(i,o),u=n.$new();u.modalBody="app/shared/services/modal/confirmModal.html",u.title=l.title,u.message=l.message,u.okCallback=function(){s.close(),a.resolve("true"),l.okCallback()},u.cancelCallback=function(){s.close(),a.reject("false"),l.cancelCallback()};var c=t("<modal></modal>")(u);return e.find("body").append(c),a.promise},this.close=function(){e.find("modal").remove()}}]),angular.module("liveopsConfigPanel.tenant.group.mock",["liveopsConfigPanel.mock"]).service("mockGroups",function(e){return[new e({id:"groupId1",name:"groupName1",tenantId:"tenant-id"}),new e({id:"groupId2",name:"groupName2",tenantId:"tenant-id"}),new e({id:"groupId3",name:"groupName3",tenantId:"tenant-id"}),new e({id:"groupId100",name:"groupName100",description:"Does not exist yet!",tenantId:"tenant-id"})]}).run(["$httpBackend","apiHostname","mockGroups",function(e,n,t){e.when("GET",n+"/v1/tenants/tenant-id/groups/groupId1").respond({result:t[0]}),e.when("GET",n+"/v1/tenants/tenant-id/groups/groupId2").respond({result:t[1]}),e.when("GET",n+"/v1/tenants/tenant-id/groups/groupId3").respond({result:t[2]}),e.when("GET",n+"/v1/tenants/tenant-id/groups").respond({result:[t[0],t[1],t[2]]}),e.when("POST",n+"/v1/tenants/tenant-id/groups").respond({result:t[3]}),e.when("GET",n+"/v1/groups/groupId0").respond(404)}]),angular.module("liveopsConfigPanel.shared.services").factory("Group",["LiveopsResourceFactory","apiHostname","cacheAddInterceptor","emitInterceptor",function(e,n,t,r){var s=e.create({endpoint:n+"/v1/tenants/:tenantId/groups/:id",resourceName:"Group",updateFields:[{name:"name"},{name:"description",optional:!0},{name:"owner"},{name:"active",optional:!0}],saveInterceptor:[t,r],updateInterceptor:r});return s.prototype.getDisplay=function(){return this.name},s}]),angular.module("liveopsConfigPanel.tenant.permission.mock",["liveopsConfigPanel.mock"]).service("mockTenantPermissions",function(e){return[new e({id:"permissionId1",name:"PERMISSION_1",tenantId:"tenant-id"}),new e({id:"permissionId2",name:"PERMISSION_2",tenantId:"tenant-id"}),new e({id:"permissionId3",name:"PERMISSION_3",tenantId:"tenant-id"})]}).run(["$httpBackend","apiHostname","mockTenantPermissions",function(e,n,t){e.when("GET",n+"/v1/tenants/tenant-id/permissions").respond({result:[t[0],t[1]]}),e.when("GET",n+"/v1/tenants/tenant-id/permissionId1").respond({result:t[0]}),e.when("GET",n+"/v1/tenants/tenant-id/permissionId2").respond({result:t[1]}),e.when("GET",n+"/v1/tenants/tenant-id/permissionId3").respond({result:t[2]})}]).service("mockPlatformPermissions",function(e){return[new e({id:"permissionId1",name:"PLATFORM_PERMISSION_1"}),new e({id:"permissionId2",name:"PLATFORM_PERMISSION_1"})]}).run(["$httpBackend","apiHostname","mockPlatformPermissions",function(e,n,t){e.when("GET",n+"/v1/permissions").respond({result:[t[0],t[1]]}),e.when("GET",n+"/v1/permissions/permissionId1").respond({result:t[0]}),e.when("GET",n+"/v1/permissions/permissionId2").respond({result:t[1]})}]),angular.module("liveopsConfigPanel.shared.services").factory("PlatformPermission",["LiveopsResourceFactory","apiHostname",function(e,n){var t=e.create({endpoint:n+"/v1/permissions/:id",resourceName:"PlatformPermission",updateFields:[]});return t.prototype.getDisplay=function(){return this.name},t}]),angular.module("liveopsConfigPanel.shared.services").factory("PlatformRole",["LiveopsResourceFactory","apiHostname",function(e,n){var t=e.create({endpoint:n+"/v1/roles:id",resourceName:"PlatformRole",updateFields:[{name:"name"},{name:"description",optional:!0},{name:"permissions",optional:!0}]});return t.prototype.getDisplay=function(){return this.name},t.getName=function(e){return t.cachedGet({id:e}).name},t}]),angular.module("liveopsConfigPanel.tenant.role.mock",["liveopsConfigPanel.mock"]).service("mockRoles",function(e){return[new e({id:"roleId1",name:"roleName1",tenantId:"tenant-id",permissions:[]}),new e({id:"roleId2",name:"roleName2",tenantId:"tenant-id",permissions:[]}),new e({id:"roleId3",name:"roleName3",description:"Does not exist yet!",tenantId:"tenant-id",permissions:[]})]}).run(["$httpBackend","apiHostname","mockRoles",function(e,n,t){e.when("GET",n+"/v1/tenants/tenant-id/roles").respond({result:[t[0],t[1]]}),e.when("GET",n+"/v1/tenants/tenant-id/roles/roleId1").respond({result:t[0]}),e.when("GET",n+"/v1/tenants/tenant-id/roles/roleId2").respond({result:t[1]})}]).service("mockPlatformRoles",function(e){return[new e({id:"roleId1",name:"roleName1",permissions:[]}),new e({id:"roleId2",name:"roleName2",permissions:[]})]}).run(["$httpBackend","apiHostname","mockPlatformRoles",function(e,n,t){e.when("GET",n+"/v1/roles").respond({result:[t[0],t[1]]}),e.when("GET",n+"/v1/roles/roleId1").respond({result:t[0]}),e.when("GET",n+"/v1/roles/roleId2").respond({result:t[1]})}]),angular.module("liveopsConfigPanel.shared.services").factory("TenantPermission",["LiveopsResourceFactory","apiHostname",function(e,n){var t=e.create({endpoint:n+"/v1/tenants/:tenantId/permissions/:id",resourceName:"TenantPermission",updateFields:[]});return t.prototype.getDisplay=function(){return this.name},t}]),angular.module("liveopsConfigPanel.shared.services").factory("TenantRole",["LiveopsResourceFactory","apiHostname","Session","cacheAddInterceptor","emitInterceptor",function(e,n,t,r,s){var o=e.create({endpoint:n+"/v1/tenants/:tenantId/roles/:id",resourceName:"TenantRole",updateFields:[{name:"name"},{name:"description",optional:!0},{name:"permissions"}],saveInterceptor:[r,s]});return o.prototype.getDisplay=function(){return this.name},o.getName=function(e){return o.cachedGet({tenantId:t.tenant.tenantId,id:e}).name},o}]),angular.module("liveopsConfigPanel.tenant.skill.mock",["liveopsConfigPanel.mock"]).service("mockSkills",function(e){return[new e({id:"skillId1",name:"skillName1",tenantId:"tenant-id",hasProficiency:!0}),new e({id:"skillId2",name:"skillName2",tenantId:"tenant-id",hasProficiency:!1}),new e({id:"skillId3",name:"skillName3",description:"Does not exist yet!",tenantId:"tenant-id",hasProficiency:!1})]
}).service("mockUserSkills",function(e){return[new e({skillId:"skillId1",tenantId:"tenant-id",userId:"userId1",proficiency:0}),new e({skillId:"skillId1",tenantId:"tenant-id",userId:"userId2",proficiency:5}),new e({skillId:"skillId2",tenantId:"tenant-id",userId:"userId1",proficiency:8}),new e({skillId:"skillId3",tenantId:"tenant-id",userId:"userId2",proficiency:10})]}).service("mockSkillUsers",function(e){return[new e({userId:"userId1",proficiency:0}),new e({userId:"userId2",proficiency:5}),new e({userId:"userId1",proficiency:8}),new e({userId:"userId2",proficiency:10})]}).run(["$httpBackend","apiHostname","mockSkills","mockUserSkills","mockSkillUsers",function(e,n,t,r,s){e.when("GET",n+"/v1/tenants/tenant-id/skills").respond({result:[t[0],t[1]]}),e.when("GET",n+"/v1/tenants/tenant-id/skills/skillId1").respond({result:t[0]}),e.when("GET",n+"/v1/tenants/tenant-id/skills/skillId2").respond({result:t[1]}),e.when("GET",n+"/v1/tenants/tenant-id/users/userId1/skills").respond({result:[r[0],r[2]]}),e.when("GET",n+"/v1/tenants/tenant-id/users/userId2/skills").respond({result:[r[1]]}),e.when("GET",n+"/v1/tenants/tenant-id/skills/skillId1/users").respond({result:[s[0],s[1]]}),e.when("GET",n+"/v1/tenants/tenant-id/skills/skillId2/users").respond({result:[s[2]]}),e.when("POST",n+"/v1/tenants/tenant-id/skills").respond({result:t[2]}),e.when("POST",n+"/v1/tenants/tenant-id/users/userId1/skills").respond({result:r[2]}),e.when("DELETE",n+"/v1/tenants/tenant-id/users/userId1/skills/skillId1").respond(200),e.when("PUT",n+"/v1/tenants/tenant-id/users/userId1/skills/skillId1").respond({result:r[0]})}]),angular.module("liveopsConfigPanel.shared.services").factory("Skill",["LiveopsResourceFactory","apiHostname","cacheAddInterceptor","emitInterceptor",function(e,n,t,r){var s=e.create({endpoint:n+"/v1/tenants/:tenantId/skills/:id",resourceName:"Skill",updateFields:[{name:"name"},{name:"description",optional:!0},{name:"hasProficiency"},{name:"active",optional:!0}],saveInterceptor:[t,r],updateInterceptor:r});return s.prototype.getDisplay=function(){return this.name},s}]),angular.module("liveopsConfigPanel.shared.services").service("tenantUserTransformer",["User","TenantRole","Session",function(e,n,t){var r=function(e,n,t){e[t]=e[n],delete e[n]},s=function(e,n,t){e.$user[t?t:n]=e[n],delete e[n]},o=function(e,n){e.$user[n]=e[n]};this.transform=function(i){i.$user=new e,i.userId&&r(i,"userId","id"),s(i,"firstName"),s(i,"lastName"),s(i,"externalId"),s(i,"personalTelephone"),s(i,"platformStatus","status"),o(i,"id"),o(i,"email"),r(i,"groups","$groups"),r(i,"skills","$skills"),i.roleName?r(i,"roleName","$roleName"):i.$roleName=n.getName(i.roleId),i.tenantId=t.tenant.tenantId,i.$user.$original=angular.copy(i.$user)}}]).service("tenantUserInterceptor",["tenantUserTransformer",function(e){this.response=function(n){var t=n.resource;return e.transform(t),t}}]).service("tenantUserQueryInterceptor",["tenantUserTransformer",function(e){this.response=function(n){return angular.forEach(n.resource,function(n){e.transform(n)}),n.resource}}]),angular.module("liveopsConfigPanel.shared.services").factory("TenantUser",["LiveopsResourceFactory","apiHostname","tenantUserInterceptor","tenantUserQueryInterceptor","cacheAddInterceptor",function(e,n,t,r,s){var o=e.create({endpoint:n+"/v1/tenants/:tenantId/users/:id",resourceName:"TenantUser",updateFields:[{name:"status"},{name:"roleId"},{name:"extensions"}],getInterceptor:t,queryInterceptor:r,saveInterceptor:[t,s],updateInterceptor:t});o.prototype.getDisplay=function(){return this.$user?this.$user.getDisplay():void 0};var i=o.prototype.reset;return o.prototype.reset=function(){i.call(this),this.$user.reset()},o.prototype.isNew=function(){return!this.id},o}]),angular.module("liveopsConfigPanel.tenant.user.mock",["liveopsConfigPanel.mock","liveopsConfigPanel.tenant.role.mock"]).service("mockTenantUsers",function(e){return[new e({id:"userId1",status:"pending",externalId:73795,lastName:"Lowe",firstName:"Munoz",email:"munoz.lowe@hivedom.org",tenantId:"tenant-id",roleName:"roleName1",roleId:"roleId1",skills:[],groups:[]}),new e({id:"userId2",status:"enabled",externalId:80232,lastName:"Oliver",firstName:"Michael",email:"michael.oliver@ezent.io",tenantId:"tenant-id",roleName:"roleName1",roleId:"roleId1",skills:[],groups:[]}),new e({email:"test1@bluespurs.com",createdBy:"userId1",personalTelephone:null,platformStatus:"pending",firstName:"test",created:"2015-08-19T13:25:13Z",state:"offline",extension:"ca027450_4673_11e5_bded_621c6d9e2761",$skills:[],externalId:"56789",status:"invited",id:"userId100",lastName:"1",groups:[{tenantId:"tenant-id",memberId:"userId1",groupId:"groupId1",added:"2015-08-19T13:25:13Z",memberType:"user",name:"everyone",ower:"userId1",description:"everyone group"}],roleId:"roleId1"}),new e({tenantId:"tenantId",email:"test1@bluespurs.com",createdBy:"userId1",sessionReason:null,invitationExpiryDate:"2015-08-20T13:36:11Z",updated:null,created:"2015-08-19T13:36:11Z",state:"offline",extension:"41903310_4677_11e5_bded_621c6d9e2761",updatedBy:null,status:"invited",userId:"userId100",sessionStarted:"2015-08-19T13:36:11Z",roleId:"roleId1"})]}).run(["$httpBackend","apiHostname","mockTenantUsers",function(e,n,t){e.when("GET",n+"/v1/tenants/tenant-id/users/userId1").respond({result:t[0]}),e.when("GET",n+"/v1/tenants/tenant-id/users/userId2").respond({result:t[1]}),e.when("GET",n+"/v1/tenants/tenant-id/users/userId100").respond({result:t[2]}),e.when("GET",n+"/v1/tenants/tenant-id/users").respond({result:[t[0],t[1]]}),e.when("GET",n+"/v1/tenants/tenant-id/userId").respond(404),e.when("POST",n+"/v1/tenants/tenant-id/users").respond(t[3])}]),angular.module("liveopsConfigPanel.shared.services").factory("TenantGroupUsers",["LiveopsResourceFactory","apiHostname",function(e,n){return e.create({endpoint:n+"/v1/tenants/:tenantId/groups/:groupId/users/:memberId",resourceName:"TenantGroupUser",requestUrlFields:{tenantId:"@tenantId",groupId:"@groupId",memberId:"@memberId"}})}]),angular.module("liveopsConfigPanel.shared.services").factory("TenantUserGroups",["LiveopsResourceFactory","apiHostname",function(e,n){return e.create({endpoint:n+"/v1/tenants/:tenantId/users/:memberId/groups",resourceName:"TenantUserGroup",requestUrlFields:{tenantId:"@tenantId",memberId:"@memberId"}})}]),angular.module("liveopsConfigPanel.tenant.user.group.mock",["liveopsConfigPanel.mock"]).service("mockGroupUsers",function(e){return[new e({groupId:"groupId1",memberId:"userId1",tenantId:"tenant-id"}),new e({groupId:"groupId2",memberId:"userId1",tenantId:"tenant-id"}),new e({groupId:"groupId1",memberId:"userId2",tenantId:"tenant-id"})]}).service("mockUserGroups",function(e){return[new e({groupId:"groupId1",memberId:"userId1",tenantId:"tenant-id"}),new e({groupId:"groupId2",memberId:"userId1",tenantId:"tenant-id"}),new e({groupId:"groupId1",memberId:"userId2",tenantId:"tenant-id"})]}).run(["$httpBackend","apiHostname","mockGroups","mockGroupUsers","mockUserGroups","Session",function(e,n,t,r,s,o){o.tenant.tenantId="tenant-id",e.when("POST",n+"/v1/tenants/tenant-id/groups/groupId1/users",{userId:"userId1"}).respond(200,s[1]),e.when("POST",n+"/v1/tenants/tenant-id/groups/groupId2/users",{userId:"userId1"}).respond(200,s[1]),e.when("DELETE",n+"/v1/tenants/tenant-id/groups/groupId1/users/userId1").respond(200),e.when("DELETE",n+"/v1/tenants/tenant-id/groups/groupId1/users/userId2").respond(200),e.when("GET",n+"/v1/tenants/tenant-id/users/userId1/groups").respond({result:[s[0],s[1]]}),e.when("GET",n+"/v1/tenants/tenant-id/users/userId2/groups").respond({result:[s[2]]}),e.when("GET",n+"/v1/tenants/tenant-id/groups/groupId1/users").respond({result:[r[0],r[2]]}),e.when("GET",n+"/v1/tenants/tenant-id/groups/groupId2/users").respond({result:[r[1]]}),e.when("GET",n+"/v1/tenants/tenant-id/groups/groupId3/users").respond({result:[]})}]),angular.module("liveopsConfigPanel.shared.services").service("removeDefaultProficiencyInterceptor",["queryCache","Skill","Session","filterFilter",function(e,n,t,r){this.response=function(e){var s=e.resource.skillId;return n.cachedQuery({tenantId:t.tenant.tenantId}).$promise.then(function(n){var t=r(n,{id:s},!0);t.length>0&&(t[0].hasProficiency||delete e.resource.proficiency)}),e.resource}}]),angular.module("liveopsConfigPanel.shared.services").service("setSkillNameInterceptor",["queryCache","Skill","Session","filterFilter",function(e,n,t,r){this.response=function(e){var s=e.resource.skillId;return n.cachedQuery({tenantId:t.tenant.tenantId}).$promise.then(function(n){var t=r(n,{id:s},!0);t.length>0&&(e.resource.name=t[0].name)}),e.resource}}]),angular.module("liveopsConfigPanel.shared.services").factory("TenantSkillUser",["LiveopsResourceFactory","apiHostname",function(e,n){return e.create({endpoint:n+"/v1/tenants/:tenantId/skills/:skillId/users/:userId",resourceName:"TenantSkillUser"})}]),angular.module("liveopsConfigPanel.shared.services").factory("TenantUserSkill",["LiveopsResourceFactory","apiHostname","emitInterceptor","cacheAddInterceptor","userSkillCacheRemoveInterceptor","setSkillNameInterceptor","removeDefaultProficiencyInterceptor",function(e,n,t,r,s,o,i){var a=e.create({endpoint:n+"/v1/tenants/:tenantId/users/:userId/skills/:skillId",resourceName:"TenantUserSkill",updateFields:[{name:"proficiency"}],requestUrlFields:{tenantId:"@tenantId",userId:"@userId",skillId:"@id"},saveInterceptor:[t,o,i,r],updateInterceptor:[t,o],deleteInterceptor:s});return a.prototype.cacheKey=function(){return"TenantUserSkill"+this.userId},a}]),angular.module("liveopsConfigPanel.shared.services").service("userSkillCacheRemoveInterceptor",["queryCache","filterFilter",function(e,n){this.response=function(t){if(angular.isDefined(t.resource.cacheKey())){var r=t.resource.cacheKey();if(e.get(r)){var s=n(e.get(r),{skillId:t.resource.skillId},!0);s.length>0&&e.get(r).removeItem(s[0])}}return t.resource}}]),angular.module("liveopsConfigPanel.shared.services").factory("User",["LiveopsResourceFactory","apiHostname","cacheAddInterceptor","emitInterceptor","userUpdateTransformer",function(e,n,t,r,s){var o=e.create({endpoint:n+"/v1/users/:id",resourceName:"User",updateFields:[{name:"firstName",optional:!0},{name:"lastName",optional:!0},{name:"password"},{name:"externalId",optional:!0},{name:"personalTelephone",optional:!0}],saveInterceptor:[t,r],updateInterceptor:r,putRequestTransformer:s});return o.prototype.getDisplay=function(){if(this.firstName||this.lastName){var e=(this.firstName?this.firstName:"")+" "+(this.lastName?this.lastName:"");return e.trim()}return this.email},o}]).service("userUpdateTransformer",["Session",function(e){return function(n){return e.isAuthenticated()&&n.id!==e.user.id||(delete n.status,delete n.roleId),n}}]),angular.module("liveopsConfigPanel.user.mock",["liveopsConfigPanel.mock"]).service("mockUsers",function(e){return[new e({id:"userId1",status:"disabled",externalId:73795,lastName:"Lowe",firstName:"Munoz",email:"munoz.lowe@hivedom.org"}),new e({id:"userId2",status:"enabled",externalId:80232,lastName:"Oliver",firstName:"Michael",email:"michael.oliver@ezent.io"}),new e({id:"userId100",status:"enabled",externalId:80233,lastName:"Moon",firstName:"Jackie",email:"jackie.moon@liveops.com",displayName:"Jackie Moon"})]}).run(["$httpBackend","apiHostname","mockUsers",function(e,n,t){e.when("GET",n+"/v1/users/userId1?tenantId=tenant-id").respond({result:t[0]}),e.when("GET",n+"/v1/users/userId2?tenantId=tenant-id").respond({result:t[1]}),e.when("GET",n+"/v1/users/userId100?tenantId=tenant-id").respond({result:t[2]}),e.when("GET",n+"/v1/users?tenantId=tenant-id").respond({result:t}),e.when("GET",n+"/v1/users").respond({result:[t[0],t[1]]}),e.when("GET",n+"/v1/users/userId0?tenantId=tenant-id").respond(404),e.when("POST",n+"/v1/users").respond(t[2])}]);